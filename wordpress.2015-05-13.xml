<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->


<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>杂七杂八</title>
	<link>http://www.dcharm.com</link>
	<description>孤独患者的自言自语。</description>
	<pubDate>Wed, 13 May 2015 09:15:49 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.dcharm.com</wp:base_site_url>
	<wp:base_blog_url>http://www.dcharm.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>wangqiang.whu.1988@gmail.com</wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>27</wp:term_id><wp:category_nicename>git</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[git]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>hadoop</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[hadoop]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>hive</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[hive]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>ios</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ios]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[java]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>linux</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[linux]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>2</wp:term_id><wp:category_nicename>mac</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[mac]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>30</wp:term_id><wp:category_nicename>mysql</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[mysql]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[python]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>wordpress</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[wordpress]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>45</wp:term_id><wp:category_nicename>%e6%8a%95%e8%b5%84</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[投资]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[数据分析]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>%e6%97%a5%e5%bf%97%e5%88%86%e6%9e%90</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[日志分析]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[未分类]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>ace</wp:tag_slug><wp:tag_name><![CDATA[ace]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>app</wp:tag_slug><wp:tag_name><![CDATA[app]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>branch</wp:tag_slug><wp:tag_name><![CDATA[branch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>build-failed</wp:tag_slug><wp:tag_name><![CDATA[build failed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>dataframe</wp:tag_slug><wp:tag_name><![CDATA[dataframe]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>githup</wp:tag_slug><wp:tag_name><![CDATA[githup]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>hadoop</wp:tag_slug><wp:tag_name><![CDATA[hadoop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>hive</wp:tag_slug><wp:tag_name><![CDATA[hive]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>ignore</wp:tag_slug><wp:tag_name><![CDATA[ignore]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>ios</wp:tag_slug><wp:tag_name><![CDATA[ios]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>json</wp:tag_slug><wp:tag_name><![CDATA[json]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>2</wp:term_id><wp:tag_slug>mac</wp:tag_slug><wp:tag_name><![CDATA[mac]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>maven</wp:tag_slug><wp:tag_name><![CDATA[maven]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>mysql</wp:tag_slug><wp:tag_name><![CDATA[mysql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>nil</wp:tag_slug><wp:tag_name><![CDATA[nil]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>pytho</wp:tag_slug><wp:tag_name><![CDATA[pytho]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>python</wp:tag_slug><wp:tag_name><![CDATA[python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>radio-button</wp:tag_slug><wp:tag_name><![CDATA[radio button]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>spring</wp:tag_slug><wp:tag_name><![CDATA[spring]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>swift</wp:tag_slug><wp:tag_name><![CDATA[swift]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>word</wp:tag_slug><wp:tag_name><![CDATA[word]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>wordpress</wp:tag_slug><wp:tag_name><![CDATA[wordpress]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>xcode</wp:tag_slug><wp:tag_name><![CDATA[xcode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>%e4%b8%ad%e6%96%87</wp:tag_slug><wp:tag_name><![CDATA[中文]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>%e4%b9%b0%e6%88%bf</wp:tag_slug><wp:tag_name><![CDATA[买房]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>%e4%bb%a3%e7%a0%81%e7%ae%a1%e7%90%86</wp:tag_slug><wp:tag_name><![CDATA[代码管理]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>%e5%8e%9f%e5%9e%8b%e8%ae%be%e8%ae%a1</wp:tag_slug><wp:tag_name><![CDATA[原型设计]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>%e5%ad%97%e7%ac%a6%e4%b8%b2</wp:tag_slug><wp:tag_name><![CDATA[字符串]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>%e6%8a%95%e8%b5%84</wp:tag_slug><wp:tag_name><![CDATA[投资]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90</wp:tag_slug><wp:tag_name><![CDATA[数据分析]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>%e6%96%87%e4%bb%b6%e6%9f%a5%e6%89%be</wp:tag_slug><wp:tag_name><![CDATA[文件查找]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>%e6%96%87%e4%bb%b6%e8%a7%a3%e5%8e%8b</wp:tag_slug><wp:tag_name><![CDATA[文件解压]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>%e6%9e%9a%e4%b8%be</wp:tag_slug><wp:tag_name><![CDATA[枚举]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>%e6%ad%bb%e9%94%81</wp:tag_slug><wp:tag_name><![CDATA[死锁]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>%e6%b3%9b%e5%9e%8b</wp:tag_slug><wp:tag_name><![CDATA[泛型]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>%e7%85%a7%e7%89%87</wp:tag_slug><wp:tag_name><![CDATA[照片]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>%e7%bb%a7%e6%89%bf</wp:tag_slug><wp:tag_name><![CDATA[继承]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>%e7%bd%91%e9%a1%b5%e5%88%86%e6%9e%90</wp:tag_slug><wp:tag_name><![CDATA[网页分析]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>%e8%81%9a%e7%b1%bb</wp:tag_slug><wp:tag_name><![CDATA[聚类]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>%e9%80%9f%e5%ba%a6</wp:tag_slug><wp:tag_name><![CDATA[速度]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>%e9%98%bf%e9%87%8c%e4%ba%91</wp:tag_slug><wp:tag_name><![CDATA[阿里云]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>12</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>%e8%8f%9c%e5%8d%951</wp:term_slug><wp:term_name><![CDATA[菜单1]]></wp:term_name></wp:term>

	

	<item>
				<title>关于</title>
		<link>http://www.dcharm.com/?page_id=2</link>
		<pubDate>Sat, 19 Jul 2014 01:26:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[Draw a line on the sand.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2014-07-19 09:26:09</wp:post_date>
		<wp:post_date_gmt>2014-07-19 01:26:09</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sample-page</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>bar</title>
		<link>http://www.dcharm.com/?attachment_id=19</link>
		<pubDate>Sat, 19 Jul 2014 09:59:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/07/bar.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2014-07-19 17:59:10</wp:post_date>
		<wp:post_date_gmt>2014-07-19 09:59:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bar</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>15</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/07/bar.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/07/bar.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:800;s:6:"height";i:600;s:4:"file";s:15:"2014/07/bar.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>hist</title>
		<link>http://www.dcharm.com/?attachment_id=21</link>
		<pubDate>Sat, 19 Jul 2014 10:01:03 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/07/hist.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2014-07-19 18:01:03</wp:post_date>
		<wp:post_date_gmt>2014-07-19 10:01:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hist</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>15</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/07/hist.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/07/hist.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:800;s:6:"height";i:600;s:4:"file";s:16:"2014/07/hist.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>sine</title>
		<link>http://www.dcharm.com/?attachment_id=22</link>
		<pubDate>Sat, 19 Jul 2014 10:02:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/07/sine.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2014-07-19 18:02:47</wp:post_date>
		<wp:post_date_gmt>2014-07-19 10:02:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sine</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>15</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/07/sine.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/07/sine.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:800;s:6:"height";i:600;s:4:"file";s:16:"2014/07/sine.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>scatter</title>
		<link>http://www.dcharm.com/?attachment_id=23</link>
		<pubDate>Sat, 19 Jul 2014 10:11:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/07/scatter.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2014-07-19 18:11:17</wp:post_date>
		<wp:post_date_gmt>2014-07-19 10:11:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scatter</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>15</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/07/scatter.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/07/scatter.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:800;s:6:"height";i:600;s:4:"file";s:19:"2014/07/scatter.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>matrix</title>
		<link>http://www.dcharm.com/?attachment_id=27</link>
		<pubDate>Tue, 22 Jul 2014 01:43:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/07/matrix.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2014-07-22 09:43:40</wp:post_date>
		<wp:post_date_gmt>2014-07-22 01:43:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>matrix</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>13</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/07/matrix.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/07/matrix.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:407;s:6:"height";i:206;s:4:"file";s:18:"2014/07/matrix.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>日志收集和分析</title>
		<link>http://www.dcharm.com/?attachment_id=28</link>
		<pubDate>Tue, 22 Jul 2014 03:08:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/07/日志收集和分析.pptx</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2014-07-22 11:08:58</wp:post_date>
		<wp:post_date_gmt>2014-07-22 03:08:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%97%a5%e5%bf%97%e6%94%b6%e9%9b%86%e5%92%8c%e5%88%86%e6%9e%90</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/07/日志收集和分析.pptx</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/07/日志收集和分析.pptx]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>log</title>
		<link>http://www.dcharm.com/?attachment_id=29</link>
		<pubDate>Tue, 22 Jul 2014 03:11:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/07/log.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2014-07-22 11:11:44</wp:post_date>
		<wp:post_date_gmt>2014-07-22 03:11:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>log</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>6</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/07/log.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/07/log.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:543;s:6:"height";i:243;s:4:"file";s:15:"2014/07/log.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>首页</title>
		<link>http://www.dcharm.com/?page_id=35</link>
		<pubDate>Tue, 22 Jul 2014 04:09:57 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?page_id=35</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2014-07-22 12:09:57</wp:post_date>
		<wp:post_date_gmt>2014-07-22 04:09:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%a6%96%e9%a1%b5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>mockup</title>
		<link>http://www.dcharm.com/?attachment_id=79</link>
		<pubDate>Sat, 16 Aug 2014 09:18:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/08/mockup.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2014-08-16 17:18:19</wp:post_date>
		<wp:post_date_gmt>2014-08-16 09:18:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mockup</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>74</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/08/mockup.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/08/mockup.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:1070;s:6:"height";i:918;s:4:"file";s:18:"2014/08/mockup.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>首页</title>
		<link>http://www.dcharm.com/?p=87</link>
		<pubDate>Mon, 18 Aug 2014 08:00:08 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=87</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2014-08-18 16:00:08</wp:post_date>
		<wp:post_date_gmt>2014-08-18 08:00:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%a6%96%e9%a1%b5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e8%8f%9c%e5%8d%951"><![CDATA[菜单1]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.dcharm.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://www.dcharm.com/?p=91</link>
		<pubDate>Mon, 18 Aug 2014 08:00:08 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2014-08-18 16:00:08</wp:post_date>
		<wp:post_date_gmt>2014-08-18 08:00:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e8%8f%9c%e5%8d%951"><![CDATA[菜单1]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>road</title>
		<link>http://www.dcharm.com/?attachment_id=134</link>
		<pubDate>Fri, 12 Dec 2014 09:48:18 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/12/road.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>134</wp:post_id>
		<wp:post_date>2014-12-12 17:48:18</wp:post_date>
		<wp:post_date_gmt>2014-12-12 09:48:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>road</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/12/road.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/12/road.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:293;s:6:"height";i:220;s:4:"file";s:16:"2014/12/road.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>time</title>
		<link>http://www.dcharm.com/?attachment_id=139</link>
		<pubDate>Sun, 28 Dec 2014 14:03:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/12/t.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2014-12-28 22:03:59</wp:post_date>
		<wp:post_date_gmt>2014-12-28 14:03:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>t</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>138</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/12/t.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/12/t.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:1120;s:6:"height";i:818;s:4:"file";s:13:"2014/12/t.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>web project</title>
		<link>http://www.dcharm.com/?attachment_id=154</link>
		<pubDate>Tue, 30 Dec 2014 08:27:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/12/base.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2014-12-30 16:27:58</wp:post_date>
		<wp:post_date_gmt>2014-12-30 08:27:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>base</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>151</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/12/base.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/12/base.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:371;s:6:"height";i:529;s:4:"file";s:16:"2014/12/base.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>war</title>
		<link>http://www.dcharm.com/?attachment_id=157</link>
		<pubDate>Tue, 30 Dec 2014 08:51:28 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/12/war.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2014-12-30 16:51:28</wp:post_date>
		<wp:post_date_gmt>2014-12-30 08:51:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>war</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>151</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/12/war.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/12/war.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:264;s:6:"height";i:158;s:4:"file";s:15:"2014/12/war.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>xcode</title>
		<link>http://www.dcharm.com/?attachment_id=165</link>
		<pubDate>Sat, 03 Jan 2015 03:32:30 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/10/xcode.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2015-01-03 11:32:30</wp:post_date>
		<wp:post_date_gmt>2015-01-03 03:32:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xcode</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>110</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/10/xcode.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/10/xcode.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:1704;s:6:"height";i:346;s:4:"file";s:17:"2014/10/xcode.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>type</title>
		<link>http://www.dcharm.com/?attachment_id=180</link>
		<pubDate>Tue, 06 Jan 2015 08:12:23 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2015/01/type.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2015-01-06 16:12:23</wp:post_date>
		<wp:post_date_gmt>2015-01-06 08:12:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>type</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>179</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2015/01/type.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/01/type.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:697;s:6:"height";i:555;s:4:"file";s:16:"2015/01/type.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>conn</title>
		<link>http://www.dcharm.com/?attachment_id=193</link>
		<pubDate>Wed, 07 Jan 2015 10:24:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2014/10/conn.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2015-01-07 18:24:16</wp:post_date>
		<wp:post_date_gmt>2015-01-07 10:24:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>conn</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>110</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2014/10/conn.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/10/conn.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:1094;s:6:"height";i:396;s:4:"file";s:16:"2014/10/conn.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>300-250</title>
		<link>http://www.dcharm.com/?attachment_id=305</link>
		<pubDate>Fri, 24 Apr 2015 08:12:08 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/wp-content/uploads/2015/04/300-250.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>305</wp:post_id>
		<wp:post_date>2015-04-24 16:12:08</wp:post_date>
		<wp:post_date_gmt>2015-04-24 08:12:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>300-250</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.dcharm.com/wp-content/uploads/2015/04/300-250.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/04/300-250.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";i:300;s:6:"height";i:250;s:4:"file";s:19:"2015/04/300-250.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>日志分析--日志搜集</title>
		<link>http://www.dcharm.com/?p=6</link>
		<pubDate>Sat, 19 Jul 2014 09:34:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[“云”的出现使得拥有和维护网站变得简单和便捷，只需要按照服务商提供的按照帮助手册上的指示点击一系列按钮，一个新的网站随之诞生，再花上几十元钱，申请一个指向这个网站的域名，它就可以被全世界的人访问。在这些形形色色的网站中，有些用于记录和展示私人经历，而另外一些则肩负着带来更多购买公司产品的顾客的使命。公司尤其是互联网公司在衡量网站的状态是否达到目标时会采用很多指标，例如访问量(PV),访客数(UV)，新客率，跳出率，转化率等等。其中的一些指标可以借助Google Analytics之类的第3方服务提供商得到，而另外一些指标就需要挖掘网站的访问日志才能够获得。&lt;!–more–&gt;设计合理的网站日志系统记录了用户在网站停留过程中每一次有价值的行为，通过挖掘这些记录，工程师们在统计上述指标之外可以发现更多的细节。我的第一份工作是家提供垂直搜索互联网公司的搜索工程师，工作的主要内容就是改进搜索结果排序，提升搜索质量，帮助用户更快，更简单地找到用户感兴趣的餐馆,酒吧，KTV等类型的商户。我们的搜索系统每天要处理千万次的搜索请求，这些搜索请求的关键词各不相同，即使是同样的关键词在不同的场景下用户也希望得到不同的结果，那么我们怎么知道用户到底想要什么呢？网站搜集到的日志在这个时候就排上了大用场，我们改进搜索排序的各种策略，也就是排序算法，都是通过挖掘用户的搜索日志得到的。

文章的标题叫做日志分析，其实忽略一个很重要的步骤：日志搜集。咋一想之下，大家会觉得日志搜集和日志分析是两个完全不同的阶段，两者之间是应该完全独立，互不影响的，相信大家看过我的经验之后应该会对这个问题有所改观：日志搜集系统数据存储方式设计的好，会极大的方便分析时数据的读取，搜集策略设计的好，可以极大的提升数据获取的及时性。

公司的日志搜集的流程如图1所示：
<pre><a href="http://www.dcharm.com/wp-content/uploads/2014/07/log.png"><img class="alignnone size-full wp-image-29" src="http://www.dcharm.com/wp-content/uploads/2014/07/log.png" alt="log" width="543" height="243" /></a></pre>
用户通过浏览器向HTTP服务器发起请求，然后HTTP服务器将搜索关键词，商户类型等条件查询传递给搜索服务器，搜索服务器从事先建立好的商户搜索引中得到满足这些查询条件的商户的集合。有时满足查询条件的商户的数量会比较多，用户从这个结果中找到他们需要的信息无异于大海捞针，所以搜索服务还需要使用特定的排序算法对结果列表中的商户进行排序，使得那些最有可能被用户点击的商户排在靠前的位置。排好序的商户列表随后被传递给HTTP服务器，HTTP服务器再将商户列表最终展现在用户的浏览器页面中。用户浏览行为的搜集工作由嵌在网页中的JavaScript片段完成，网页的载入，鼠标点击，键盘输入和拖拽等浏览器事件都会触发相应的JavaScript片段，JavaScript片段会将这些搜集到的数据以异步的方式发送给日志服务器。日志服务器会对原始日志进行清洗，去重，统一格式等工作，处理好后的日志会被同步到Hadoop集群中，本文称这部分数据为基础流量日志。搜索服务器除了接收搜索请求，返回高质量的搜索结果，同时还要记录处理搜索请求的整个过程，例如商户排序时使用的算法，匹配到的商户，商户的排序，Query处理等信息。搜索服务器记录的日志的格式统一以后，也会同步到Hadoop集群中，本文中称这部分数据为搜索流量日志。

如果我们仅仅想要知道网站一天有哪些页面被访问，每个页面被访问了多少次，用户在网站上进行了哪些搜索，每类搜索发生的次数以及这类搜索给出的商户列表是否被用户点击过，基础流量日志就可以满足我们的需求。搜索系统为了提高搜索结果质量，往往同时要上线多种不同的排序算法，分词算法并对比它们的效果，而这些搜索请求处理的细节信息存放在搜索流量日志中，因此需要将基础流量日志和搜索流量日志关联起来。关联工作的技巧在于使用query_id唯一标识一次搜索请求：HTTP服务器在请求搜索服务时会生成一个全球唯一的query_id，然后将该query_id和搜索请求同时传递给搜索服务器，搜索服务在返回搜索结果给HTTP服务器的同时也记录下query_id和处理这次请求的详细过程，HTTP服务器用得到搜索结果生成特定格式的网页时会将query_id嵌入到网页中。经过上述的一系列query_id的传递，客户端发回的任何和搜索相关的日志中都带有了query_id。这样设计的好处在于HTTP服务器不用关心搜索服务对请求的复杂的处理过程，在需要分析搜索后端的不同算法时，只需要通过query_id将基础流量日志和搜索流量日志关联。代码1是处理用户点击商户链接事件的JavaScript代码，在用户点击商户链接时该代码会将query_id, 商户id传递HTTP服务器。

[html]
&lt;a target=&quot;_blank&quot; track=&quot;tg_shanghai_recentlyview_3|1|module#3_nav_near,action#click,index#3,dealgrp_id#6049988,content#/deal/6049988&quot; href=&quot;/deal/6049988&quot;&gt; &lt;div class=&quot;image&quot;&gt; &lt;img src=&quot;http://t1.s2.com/pc/ae(216c135)/thumb.jpg&quot; title=&quot;代金券&quot;&gt; &lt;/div&gt; &lt;/a&gt;
[/html]

代码1：日志搜集JavaScript代码

从图1的设计中可以看到：不论是基础流量日志还是搜索流量日志，最终都要同步到Hadoop集群中。一个中等规模的商业网站每天要生成千万级到亿级的日志记录，这么大规模的海量日志的处理是Mysql不能胜任的，而采用压缩文件的存储方式则会给日志分析工作带来很多不便，一是日志的数据量大到单机硬盘的存储和CPU的处理跟不上，而是会有很多像按时间顺序对日志进行排序之类的重复性的工作，因此公司将日志最终都存放在了Hadoop集群中，一方面Hadoop的分布式存储文件系统HDFS很好的解决了单机硬盘存储不足的问题，另一方面，Hadoop的分布式计算框架MapReduce很好的解决了单机计算能力不足的问题，此外Hive使得用户可以使用传统关系型数据库中使用的SQL对数据进行分析，不用再为排序，group by等重复性的操作而分心。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2014-07-19 17:34:17</wp:post_date>
		<wp:post_date_gmt>2014-07-19 09:34:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%97%a5%e5%bf%97%e5%88%86%e6%9e%90-%e6%97%a5%e5%bf%97%e6%90%9c%e9%9b%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%97%a5%e5%bf%97%e5%88%86%e6%9e%90"><![CDATA[日志分析]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Excel导入CSV文件中文乱码</title>
		<link>http://www.dcharm.com/?p=8</link>
		<pubDate>Sat, 19 Jul 2014 09:34:53 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=8</guid>
		<description></description>
		<content:encoded><![CDATA[一般Windows用户在使用Excel处理数据文件时都不会关心文件的编码，因为Excel支持Windows上默认使用的简体中文编码GB2312，但使用MAC的用户就没有那么省心了，一不小心就会碰到中文乱码的问题。在Mac上的Excel中为什么会出现中文乱码的情况呢？这是就需要了解一些文件编码的背景知识。文件在计算内部采用的是二进制（0和1）的形式存放，那么给定一个0和1组成的串，计算机怎么知道这个串代表的是英文中的’a’还是中文里面的’好’呢？这时就需要用到文件的编码，不同的编码告诉了计算机怎么去识别文件的内容，例如GB2312编码告诉计算机’001’代表的是中文里面的’好’，而UTF8编码告诉计算机’001’代表的是英文里面的’a’（这个例子只是为了简述文件编码的作用，实际上的编码比这个复杂得多）。由于UTF-8编码同时支持中文、还是日文、韩文、阿拉伯文在类的各种语言，所以它在Mac中被广泛使用，而目前Mac上的Excel在导入CSV文件时虽然给出了UTF8的选项，但是导入以后的中文还是乱码，这是因为它实际上是不支持UTF8编码方式导致的，至少对于Excel 2011 for Mac是这样。那么怎么解决这个问题呢，方法很简单：将文件的编码方式由UTF8转为Excel支持的中文编码方式，Mac上的iconv工具专门就可以用来干这个事情。例如，在Excel给出的中文编码方式中有GB18030，那么我们可以通过Mac上的iconv工具将文件编码由UTF8转为GB18030。只需要在命令行中键入如下的命令：

[shell]iconv -f UTF8 -t GB18030 a.csv &gt;b.csv[/shell]

就可以将a.csv文件的编码方式由UTF8 变为GB18030并写入到b.csv文件中，在Excel中导入b.csv文件中的内容，我们会发现烦人的中文乱码消失的无影无踪了！

差点忘了最重要的一个问题，使用iconv的前提是我们知道文件的编码，那么Mac上怎么知道文件的编码呢？其实很容易啦，首先用Mac自带的编辑器vim打开文件，然后使用命令

[shell]:set fileencoding[/shell]

vim就会在屏幕的下方显示文件的编码。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2014-07-19 17:34:53</wp:post_date>
		<wp:post_date_gmt>2014-07-19 09:34:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>excel%e5%af%bc%e5%85%a5csv%e6%96%87%e4%bb%b6%e4%b8%ad%e6%96%87%e4%b9%b1%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Python网页抓取</title>
		<link>http://www.dcharm.com/?p=11</link>
		<pubDate>Sat, 19 Jul 2014 09:36:40 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[在试图开发一个有意思的应用时需要用到某个网站的数据，查阅了网上Python的urllib2库的资料后，我很快用Python写出了一个获取网页内容原型：
[python]
import urllib2

request = urllib2.Request(url)
response = urllib2.urlopen(request)
[/python]

然后使用BeautifulSoup对网页的内容进行了分析：

[python]
from bs4 import BeautifulSoup

soup = BeautifulSoup(response.read())
rank_table = soup.find(id='rankingTable')
.....
[/python]

使用上面的代码片段成功地抓取和分析了某个网页的内容后，程序开始报403（没有权限）的异常，可能是程序的行为触发了服务端设置的某些限制规则从而访问被拒绝。正在沮丧的档口，我发现电脑上的chrome仍然可以正常的访问该网页，那不就意味着只要修改上面的代码片段使之更好地模拟浏览器的行为就可以继续获取数据了？于是我打开chrome自带的开发者工具，看看它的HTTP头部是神马东东：
[python]
GET /shoplist/hot_3_10 HTTP/1.1
Host: www.example.com
Connection: keep-alive
Cache-Control: max-age=0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36
Accept-Encoding: gzip,deflate,sdch
Accept-Language: zh-CN,zh;q=0.8
[/python]

发现chrome在请求这个网页时HTTP头部填写了一些额外的信息，例如浏览器的信息。修改之前的代码，使发出的HTTP请求带有和chrome一样的头部:
[python]
    i_headers = dict()
    i_headers['User-Agent'] = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36'
    i_headers['Accept'] = 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'
    i_headers['Accept-Encoding'] = 'gzip,deflate,sdch'
    i_headers['Accept-Language'] = 'zh-CN,zh;q=0.8'
    i_headers['Cache-Control'] = 'max-age=0'
    i_headers['Connection'] = 'keep-alive'
    i_headers['Host'] = 'www.dianping.com'
    request = urllib2.Request(url, headers=i_headers)
    response = urllib2.urlopen(request)
[/python]

再次运行程序，正确的结果又出现在了眼前。还没开心多久，问题又来了：程序不报forbidden异常，但得到的内容却是乱码。这个问题让我纠结了好一会，查看chrome中的response头部时一行信息引起了我的注意：
[python]
Content-Encoding:gzip
[/python]
这表明浏览器接收到的内容是用gzip压缩过的，chrome自动进行了解压，而我的代码没有对接收到的数据进行解压，所以读出的是乱码，于是更新代码如下：
[python]
import StringIO
....
if response.info().get('Content-Encoding') == 'gzip':
    buf = StringIO.StringIO(response.read())
    f = gzip.GzipFile(fileobj=buf)
    soup = BeautifulSoup(f.read())
....
[/python]
再次运行程序，所有问题都OK了，赞一个！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2014-07-19 17:36:40</wp:post_date>
		<wp:post_date_gmt>2014-07-19 09:36:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python%e7%bd%91%e9%a1%b5%e5%88%86%e6%9e%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="%e7%bd%91%e9%a1%b5%e5%88%86%e6%9e%90"><![CDATA[网页分析]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Pandas之Dataframe操作</title>
		<link>http://www.dcharm.com/?p=13</link>
		<pubDate>Sat, 19 Jul 2014 09:37:23 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=13</guid>
		<description></description>
		<content:encoded><![CDATA[Pandas是Python下一个开源数据分析的库，它提供的数据结构DataFrame极大的简化了数据分析过程中一些繁琐操作。 1. 基本使用：创建DataFrame. DataFrame是一张二维的表，大家可以把它想象成一张Excel表单或者Sql表。Excel 2007及其以后的版本的最大行数是1048576，最大列数是16384，超过这个规模的数据Excel就会弹出个框框“此文本包含多行文本，无法放置在一个工作表中”。Pandas处理上千万的数据是易如反掌的sh事情，同时随后我们也将看到它比SQL有更强的表达能力，可以做很多复杂的操作，要写的code也更少。 说了一大堆它的好处，要实际感触还得动手码代码。首要的任务就是创建一个DataFrame，它有几种创建方式：
<ul>
	<li>列表，序列(pandas.Series), numpy.ndarray的字典</li>
	<li>二维numpy.ndarray</li>
	<li>别的DataFrame</li>
	<li>结构化的记录(structured arrays)</li>
</ul>
其中，我最喜欢的是通过二维ndarray创建DataFrame，因为代码敲得最少：

[python]
import pandas as pd
import numpy as np
df = pd.DataFrame(np.random.randn(3, 4))
df
0 1 2 3
0 0.236175 -0.394792 -0.171866 0.304012
1 0.651926 0.989046 0.160389 0.482936
2 -1.039824 0.401105 -0.492714 -1.220438
[/python]
dataframe中index用来标识行，column标识列，shape表示维度。
[python]
df.index 
df.columns
df.shape
[/python]

通过describe方法，我们可以对df中的数据有个大概的了解：

[python]
df.describe()
0 1 2 3
count 3.000000 3.000000 3.000000 3.000000
mean -0.050574 0.331786 -0.168064 -0.144496
std 0.881574 0.694518 0.326568 0.936077
min -1.039824 -0.394792 -0.492714 -1.220438
25% -0.401824 0.003156 -0.332290 -0.458213
50% 0.236175 0.401105 -0.171866 0.304012
75% 0.444051 0.695076 -0.005739 0.393474
max 0.651926 0.989046 0.160389 0.482936
[/python]

2. 数据select, del, update。

按照列名select:
[python]
df[0]

0 0.236175
1 0.651926
2 -1.039824
[/python]

按照行数select:
[python]
df[:3] #选取前3行
[/python]

按照索引select:
[python]
df.loc[0]

0 0.236175
1 -0.394792
2 -0.171866
3 0.304012

[/python]

按照行数和列数select:
[python]
df.iloc[3] #选取第3行
df.iloc[2:4] #选取第2到第3行
df.iloc[0,1] #选取第0行1列的元素
dat.iloc[:2, :3] #选取第0行到第1行，第0列到第2列区域内的元素
df1.iloc[[1,3,5],[1,3]] #选取第1，3，5行，第1，3列区域内的元素
[/python]

删除某列：

[python]
del df[0]
df
1 2 3
0 -0.394792 -0.171866 0.304012
1 0.989046 0.160389 0.482936
2 0.401105 -0.492714 -1.220438
[/python]

删除某行：

[python]
df.drop(0)

1 2 3
1 0.989046 0.160389 0.482936
2 0.401105 -0.492714 -1.220438

[/python]

3.运算。

基本运算：

[python]

df[4] = df[1] + df[2]

1 2 3 4
0 -0.394792 -0.171866 0.304012 -0.566659
1 0.989046 0.160389 0.482936 1.149435
2 0.401105 -0.492714 -1.220438 -0.091609

[/python]

map运算，和python中的map有些类似：

[python]

df[4].map(int)
0 0
1 1
2 0

[/python]

apply运算：

[python]

df.apply(sum)

1 0.995359
2 -0.504192
3 -0.433489
4 0.491167

[/python]

4. Group by 操作。
pandas中的group by 操作是我的最爱，不用把数据导入excel或者mysql就可以进行灵活的group by 操作，简化了分析过程。
[python]
df[0] = ['A', 'A', 'B']
df

1 2 3 4 0
0 -0.394792 -0.171866 0.304012 -0.566659 A
1 0.989046 0.160389 0.482936 1.149435 A
2 0.401105 -0.492714 -1.220438 -0.091609 B

g = df.groupby([0])

g.size()

A 2
B 1

g.sum()

1 2 3 4
0
A 0.594254 -0.011478 0.786948 0.582776
B 0.401105 -0.492714 -1.220438 -0.091609
[/python]

5. 导出到csv文件
dataframe可以使用to_csv方法方便地导出到csv文件中，如果数据中含有中文，一般encoding指定为"utf-8",否则导出时程序会因为不能识别相应的字符串而抛出异常，index指定为False表示不用导出dataframe的index数据。
[python]
df.to_csv(file_path, encoding='utf-8', index=False)
[/python]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2014-07-19 17:37:23</wp:post_date>
		<wp:post_date_gmt>2014-07-19 09:37:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pandas%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90%e6%89%8b%e8%ae%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dataframe"><![CDATA[dataframe]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<category domain="post_tag" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[27]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Python制作统计图形</title>
		<link>http://www.dcharm.com/?p=15</link>
		<pubDate>Sat, 19 Jul 2014 09:37:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=15</guid>
		<description></description>
		<content:encoded><![CDATA[Python一般使用Matplotlib制作统计图形，<a title="它自己的说法" href="http://matplotlib.org/" target="_blank">用它自己的说法</a>是‘让简单的事情简单，让复杂的事情变得可能’。（你说国外的“码农”咋这么会说，我就整不出来这工整的句子！）用它可以制作折线图，直方图，条形图，散点图，饼图，谱图等等你能想到的和想不到的统计图形，这些图形可以导出为多种具有出版质量的格式。此外，它和ipython结合使用，确实方便，谁用谁知道！

在Matplotlib里面经常使用到的是pylab和pyplot，它之间的区别在于pyplot是封装好的调用matplotlib底层制图库的接口，制图时用户不用关心底层的实现，而pylab则是为了使用者的方便，将<a title="numpy" href="ttp://www.numpy.org/" target="_blank">numpy</a>和pyplot的功能集中在了一个命名空间中。这么解释，可能还是不太清楚，因此在此次举个例子：

[python]

import pylab

import numpy as np

import matplotlib.pyplot as plt

pylab.randn(2,3)

array([[ 1.22356117, -0.62786477, -0.02927331],
[ 1.11739661, -1.64112491, 2.24982297]])

np.random.randn(2,3)

array([[-1.41691502, -1.43500335, -0.68452086],
[-0.53925581, -0.18478012, -0.0126745 ]])

pylab.hist([1,1,1,2,3,3])

plt.hist([1,1,1,2,3,3])

[/python]

从上面的例子可以看在pylab中可以使用numpy中的一些方法，而在pyplot中不能使用numpy的方法；pylab和pyplot都可以制作统计图形。

接下来通过4个常用的统计图形--直方图，条形图，折线图和散点图来介绍首先matplot的使用。直方图和条形图主要刻画的是一维随机变量的分布，折线图和散点图主要刻画的是两个随机变量之间的相关性。首先要展示的是条形图：

[python]

N = 5
ind = np.arange(N)
width = 0.35
menMeans = (20, 35, 30, 35, 27)
menStd = (2, 3, 4, 1, 2)

womenMeans = (25, 32, 34, 20, 25)
womenStd = (3, 5, 2, 3, 3)

plt.bar(ind, menMeans, width, color='r', yerr=menStd)

plt.bar(ind+width, womenMeans, width, color='y', yerr=womenStd)

plt.title('Men-Women')

[/python]

<a href="http://www.dcharm.com/wp-content/uploads/2014/07/bar.png"><img class="alignnone size-full wp-image-19" src="http://www.dcharm.com/wp-content/uploads/2014/07/bar.png" alt="bar" width="800" height="600" /></a>
图中红色的矩形代表的是Men，黄色代表的是Women，矩形的高度代表的是改组数据的均值，矩形顶部蓝色短线代表标准差，短线自矩形的顶部分别向上和向下延伸标准差的长度。

接下来要展示的是直方图，

[python]

x1 = 10 + 5 * np.random.randn(10000)
x2 = 20 + 5 * np.random.randn(10000)

num_bins = 50
plt.hist(x1, num_bins, normed=1, facecolor='green', alpha=0.5)
plt.hist(x2, num_bins, normed=1, facecolor='blue', alpha=0.5)
plt.title('Histogram')
plt.show()

[/python]

上面的代码得到的图形

<a href="http://www.dcharm.com/wp-content/uploads/2014/07/hist.png"><img class="alignnone size-full wp-image-21" src="http://www.dcharm.com/wp-content/uploads/2014/07/hist.png" alt="hist" width="800" height="600" /></a>

如果是连续性型随机变量，其中的每个矩形的高度表示该对应随机变量的概率密度函数的值，如果是离散型随机变量，其中每个矩形的高度代表对应随机变量的概率。条形图在使用时要事先计算出数据的均值和方差，而使用直方图时，pyplot会自动统计数据的分布；条形图主要刻画数据的样本均值和方差，直方图主要刻画样本的总体分布。

接下来要展示的是折线图，代码如下：

[python]

import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(0, 10, num=100)
y = np.sin(x)
plt.plot(x,y)
plt.show()
[/python]

得到的正弦函数的图形如下：

<a href="http://www.dcharm.com/wp-content/uploads/2014/07/sine.png"><img class="alignnone size-full wp-image-22" src="http://www.dcharm.com/wp-content/uploads/2014/07/sine.png" alt="sine" width="800" height="600" /></a>

上面的图可以看做是y=sin(x)在区间[0,10]上的函数图形，每一个x有且只有一个y的值相对应，如果有多个y的值，则应该使用散点图。

[python]

import numpy as np
import matplotlib.pyplot as plt

x = np.random.randn(1000)
y = np.random.randn(1000)
plt.scatter(x,y)
plt.title('Scatter')
plt.show()
[/python]

得到散点图如下：
<a href="http://www.dcharm.com/wp-content/uploads/2014/07/scatter.png"><img class="alignnone size-full wp-image-23" src="http://www.dcharm.com/wp-content/uploads/2014/07/scatter.png" alt="scatter" width="800" height="600" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2014-07-19 17:37:58</wp:post_date>
		<wp:post_date_gmt>2014-07-19 09:37:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python%e5%88%b6%e4%bd%9c%e7%bb%9f%e8%ae%a1%e5%9b%be%e5%bd%a2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>1</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<category domain="post_tag" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3692</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>wangqiang.whu.1988@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>210.22.122.2</wp:comment_author_IP>
			<wp:comment_date>2015-04-28 14:06:37</wp:comment_date>
			<wp:comment_date_gmt>2015-04-28 06:06:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[kk]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1430201197]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1430201197.82581;s:7:"message";s:80:"Akismet无法复查此条评论（回应：invalid），将尽快自动重试。";s:5:"event";s:11:"check-error";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:15;s:14:"comment_author";s:5:"admin";s:20:"comment_author_email";s:28:"wangqiang.whu.1988@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:2:"kk";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:1;s:7:"user_ip";s:12:"210.22.122.2";s:10:"user_agent";s:120:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36";s:8:"referrer";s:27:"http://www.dcharm.com/?p=15";s:4:"blog";s:21:"http://www.dcharm.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:27:"http://www.dcharm.com/?p=15";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:2:"kk";s:11:"POST_submit";s:12:"发表评论";s:20:"POST_comment_post_ID";s:2:"15";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"df1a13ddf1";s:32:"POST__wp_unfiltered_html_comment";s:10:"b219449f51";s:10:"POST_ak_js";s:13:"1430201185350";s:15:"SERVER_SOFTWARE";s:11:"nginx/1.4.1";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:4:"USER";s:8:"www-data";s:4:"HOME";s:8:"/var/www";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:12:"QUERY_STRING";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"182";s:15:"SCRIPT_FILENAME";s:49:"/usr/share/nginx/html/dcharm/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:12:"DOCUMENT_URI";s:21:"/wp-comments-post.php";s:13:"DOCUMENT_ROOT";s:28:"/usr/share/nginx/html/dcharm";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:12:"210.22.122.2";s:11:"REMOTE_PORT";s:5:"23615";s:11:"SERVER_ADDR";s:13:"115.29.175.99";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:14:"www.dcharm.com";s:5:"HTTPS";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"HTTP_HOST";s:14:"www.dcharm.com";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"182";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:11:"HTTP_ACCEPT";s:74:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";s:11:"HTTP_ORIGIN";s:21:"http://www.dcharm.com";s:15:"HTTP_USER_AGENT";s:120:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:12:"HTTP_REFERER";s:27:"http://www.dcharm.com/?p=15";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-CN,zh;q=0.8";s:11:"HTTP_COOKIE";s:0:"";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1430201194";s:25:"comment_post_modified_gmt";s:19:"2015-04-24 08:55:06";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1430791572.108974;s:7:"message";s:31:"admin修改评论状态为trash";s:5:"event";s:12:"status-trash";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430791572]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>hive数据倾斜的解决方案</title>
		<link>http://www.dcharm.com/?p=32</link>
		<pubDate>Sun, 03 Aug 2014 13:50:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[分布式文件系统HDFS可以存储海量的数据（以T为单位的数据量），分布式计算框架MapReduce可以对存储在HDFS的数据进行处理后再将结果写回到HDFS。MapReduce + HDFS可以完成对海量数据的批量处理，但是这套组合会导致很多重复性的工作，有些处理起来比较繁琐，例如从文件中选取特定行数的数据，按照某些字段对数据进行排序，统计某些字段出现的字数，将多个数据源的数据join在一起。Hive的出现很好的解决了以上问题，用创建表的方式定义分布式文件中数据的meta信息后，用户可以使用像在关系型数据库中经常使用的SQL语句对这些数据进行操作，实际上Hive将这些SQL语句转化为了对应的MapReduce任务。

在Hive使用到最多的操作就是将多个表中的数据join到一个表中，例如：

[sql]
SELECT a.* FROM a JOIN b ON (a.id = b.id AND a.department = b.department)
[/sql]

有时在join的过程中会碰到join的两个表的数据太大，导致join过程很慢且失败。此时一般有3种解决方案：
<ul>
	<li>增加Reducer的数量，使得各个Reducer上的数据量不会超过最大限制。</li>
</ul>

[sql]

set mapred.reduce.tasks=500;

SELECT a.*,b.name FROM a JOIN b ON (a.id = b.id AND a.department = b.department)

[/sql]

<ul>
	<li>有时join超时是因为某些key对应的数据太多，而相同key对应的数据都会发送到相同的reducer上，从而导致内存不够。此时我们应该仔细分析这些异常的key，很多情况下，这些key对应的数据是异常数据，我们需要在SQL语句中进行过滤。例如<strong>key对应的字段为空</strong>。</li>
</ul>

[sql]
SELECT table_a.* , b.name
FROM
(
   SELECT *
   FROM a
   WHERE id is not null
)table_a JOIN b ON (table_a.id = b.id AND table_a.department = b.department)&lt;/pre&gt;
[/sql]

<ul>
	<li>有的时候虽然某个<strong>key为空</strong>对应的数据很多，但是相应的数据不是异常数据，必须要包含在join的结果中，此时我们可以表a中key为空的字段赋一个随机的值，使得数据随机均匀地分不到不同的reducer上。例如：</li>
</ul>

[sql]
SELECT table_a.* , b.name
FROM
(
   SELECT when is id null or id=0 then cast(rand(10) * -1000000 as int) as id, gender
   FROM a
)table_a JOIN b ON (table_a.id = b.id AND table_a.department = b.department)&lt;/pre&gt;
[/sql]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2014-08-03 21:50:31</wp:post_date>
		<wp:post_date_gmt>2014-08-03 13:50:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hive%e6%95%b0%e6%8d%ae%e5%80%be%e6%96%9c%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hadoop"><![CDATA[hadoop]]></category>
		<category domain="post_tag" nicename="hadoop"><![CDATA[hadoop]]></category>
		<category domain="category" nicename="hive"><![CDATA[hive]]></category>
		<category domain="post_tag" nicename="hive"><![CDATA[hive]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3691</wp:comment_id>
			<wp:comment_author><![CDATA[西门塔尔牛]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.xmten.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.182.136.76</wp:comment_author_IP>
			<wp:comment_date>2015-04-26 11:24:03</wp:comment_date>
			<wp:comment_date_gmt>2015-04-26 03:24:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>西门塔尔牛</strong>

好文章，内容欢风华丽.禁止此消息：nolinkok@163.com]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1430018644]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1430018644.056782;s:7:"message";s:80:"Akismet无法复查此条评论（回应：invalid），将尽快自动重试。";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:51:{s:15:"comment_post_ID";i:32;s:14:"comment_author";s:15:"西门塔尔牛";s:20:"comment_author_email";s:0:"";s:18:"comment_author_url";s:21:"http://www.xmten.com/";s:15:"comment_content";s:99:"<strong>西门塔尔牛</strong>

好文章，内容欢风华丽.禁止此消息：nolinkok@163.com";s:12:"comment_type";s:9:"trackback";s:7:"user_ip";s:14:"123.182.136.76";s:10:"user_agent";s:154:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727 ; .NET CLR 4.0.30319)";s:8:"referrer";s:27:"http://www.dcharm.com/?p=32";s:4:"blog";s:21:"http://www.dcharm.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:27:"http://www.dcharm.com/?p=32";s:21:"akismet_comment_nonce";s:6:"failed";s:10:"POST_title";s:15:"西门塔尔牛";s:8:"POST_url";s:21:"http://www.xmten.com/";s:12:"POST_excerpt";s:65:"好文章，内容欢风华丽.禁止此消息：nolinkok@163.com";s:14:"POST_blog_name";s:15:"西门塔尔牛";s:15:"SERVER_SOFTWARE";s:11:"nginx/1.4.1";s:11:"REQUEST_URI";s:22:"/wp-trackback.php?p=32";s:4:"USER";s:8:"www-data";s:4:"HOME";s:8:"/var/www";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:12:"QUERY_STRING";s:4:"p=32";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"313";s:15:"SCRIPT_FILENAME";s:45:"/usr/share/nginx/html/dcharm/wp-trackback.php";s:11:"SCRIPT_NAME";s:17:"/wp-trackback.php";s:12:"DOCUMENT_URI";s:17:"/wp-trackback.php";s:13:"DOCUMENT_ROOT";s:28:"/usr/share/nginx/html/dcharm";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"123.182.136.76";s:11:"REMOTE_PORT";s:5:"64554";s:11:"SERVER_ADDR";s:13:"115.29.175.99";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:14:"www.dcharm.com";s:5:"HTTPS";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:87:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*";s:12:"HTTP_REFERER";s:27:"http://www.dcharm.com/?p=32";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:154:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727 ; .NET CLR 4.0.30319)";s:9:"HTTP_HOST";s:14:"www.dcharm.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"313";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:5:"Close";s:8:"PHP_SELF";s:17:"/wp-trackback.php";s:12:"REQUEST_TIME";s:10:"1430018642";s:25:"comment_post_modified_gmt";s:19:"2014-12-29 14:39:12";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1430791573.9209931;s:7:"message";s:31:"admin修改评论状态为trash";s:5:"event";s:12:"status-trash";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430791573]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3693</wp:comment_id>
			<wp:comment_author><![CDATA[荷兰网]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.zhongguohelanwang.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.182.132.28</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 00:54:40</wp:comment_date>
			<wp:comment_date_gmt>2015-05-08 16:54:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>荷兰网</strong>

不错的文章，内容出类拔萃.禁止此消息：nolinkok@163.com]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1431104080]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431104080.447819;s:7:"message";s:80:"Akismet无法复查此条评论（回应：invalid），将尽快自动重试。";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:51:{s:15:"comment_post_ID";i:32;s:14:"comment_author";s:9:"荷兰网";s:20:"comment_author_email";s:0:"";s:18:"comment_author_url";s:33:"http://www.zhongguohelanwang.com/";s:15:"comment_content";s:99:"<strong>荷兰网</strong>

不错的文章，内容出类拔萃.禁止此消息：nolinkok@163.com";s:12:"comment_type";s:9:"trackback";s:7:"user_ip";s:14:"123.182.132.28";s:10:"user_agent";s:154:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727 ; .NET CLR 4.0.30319)";s:8:"referrer";s:27:"http://www.dcharm.com/?p=32";s:4:"blog";s:21:"http://www.dcharm.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:27:"http://www.dcharm.com/?p=32";s:21:"akismet_comment_nonce";s:6:"failed";s:10:"POST_title";s:9:"荷兰网";s:8:"POST_url";s:33:"http://www.zhongguohelanwang.com/";s:12:"POST_excerpt";s:71:"不错的文章，内容出类拔萃.禁止此消息：nolinkok@163.com";s:14:"POST_blog_name";s:9:"荷兰网";s:15:"SERVER_SOFTWARE";s:11:"nginx/1.4.1";s:11:"REQUEST_URI";s:22:"/wp-trackback.php?p=32";s:4:"USER";s:8:"www-data";s:4:"HOME";s:8:"/var/www";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:12:"QUERY_STRING";s:4:"p=32";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"307";s:15:"SCRIPT_FILENAME";s:45:"/usr/share/nginx/html/dcharm/wp-trackback.php";s:11:"SCRIPT_NAME";s:17:"/wp-trackback.php";s:12:"DOCUMENT_URI";s:17:"/wp-trackback.php";s:13:"DOCUMENT_ROOT";s:28:"/usr/share/nginx/html/dcharm";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"123.182.132.28";s:11:"REMOTE_PORT";s:5:"54198";s:11:"SERVER_ADDR";s:13:"115.29.175.99";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:14:"www.dcharm.com";s:5:"HTTPS";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:87:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*";s:12:"HTTP_REFERER";s:27:"http://www.dcharm.com/?p=32";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:154:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727 ; .NET CLR 4.0.30319)";s:9:"HTTP_HOST";s:14:"www.dcharm.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"307";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:5:"Close";s:8:"PHP_SELF";s:17:"/wp-trackback.php";s:12:"REQUEST_TIME";s:10:"1431104076";s:25:"comment_post_modified_gmt";s:19:"2014-12-29 14:39:12";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431506379.9447579;s:7:"message";s:31:"admin修改评论状态为trash";s:5:"event";s:12:"status-trash";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431506379]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>搜索架构</title>
		<link>http://www.dcharm.com/?p=37</link>
		<pubDate>Mon, 18 Aug 2014 07:04:14 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[在D工作一年多，先是做商户搜索质量，后来做团购推荐，都是偏后端数据分析和算法的工作，现在决定研究一下<strong>搜索架构</strong>。公司一般的分工模式是：其它组的同事用定制的搜索引擎搭起来基本的服务框架，然后我们实现里面的一些排序接口。这样分工将大项目拆分成多个模块，每个模块由不同的组负责，工作可以同时展开，每个组研究的方向比较固定，有利于在这个方向上深入地发展。最近在排序算法实现时需要底层的搜索引擎提供一些相应的特性，而相应的同学告诉我这个实现不了，再加上看到公司leader之间的斗争，一个偏工程，一个偏算法，两个都想一统天下，由于短板的存在最后都未尝所愿。这些都是我想研究一下索架构的外在原因，也算是给我职业规划的一些经验。

现有的搜索架构从功能上拆分3个大的模块：bizer, searcher, indexer。indexer负责从各个数据库里拉取数据，将数据建成一张大表，然后写到lucene的索引，难点在于定时建全量索引，索引切分，增量索引，实时索引。bizer负责接收来自客户端的请求，对请求做些预处理之后将请求发送给searcher，难点在于获取searcher的信息，决定将请求发送给哪个searcher。searcher接收来自bizer的请求，对满足条件的文档排序后返回给bizer，难点在于排序和性能，排序要将用户想要的结果排在前面，性能好就是要保证响应时间在可接收范围之内，当文档的数目越来越多时，性能问题会比较突出。D搜索架构支持的文档数目的规模在千万级别，这个数据量对于一个垂直搜索的中小型公司绰绰有余。

bizer的整个脉络可以从其核心配置文件xx.biz.xml中看出：

[xml]
&lt;bean id=&quot;tuangourecBizService&quot; class=&quot;com.dp.arts.biz.BizService&quot;&gt;
           &lt;property name=&quot;processorChain&quot;&gt;
                &lt;list&gt;
                       &lt;ref bean=&quot;preProcessorNode&quot;&gt;&lt;/ref&gt;
                       &lt;ref bean=&quot;queryProcessorNode&quot;&gt;&lt;/ref&gt;
                       &lt;ref bean=&quot;searchProcessorNode&quot;&gt;&lt;/ref&gt;
                       &lt;ref bean=&quot;postProcessorNode&quot;&gt;&lt;/ref&gt;
                       &lt;ref bean=&quot;downgradeProcessorNode&quot;&gt;&lt;/ref&gt;
              &lt;/list&gt;
        &lt;/property&gt;
 &lt;property name=&quot;bizName&quot; value=&quot;tuangourec&quot;&gt;&lt;/property&gt;
 &lt;property name=&quot;segmenter&quot; ref=&quot;segmenter&quot;&gt;&lt;/property&gt;
 &lt;property name=&quot;abExecutor&quot; ref=&quot;abExecutor&quot;&gt;&lt;/property&gt;
 &lt;property name=&quot;marinPrinter&quot; ref=&quot;marinPrinter&quot;&gt;&lt;/property&gt;
 &lt;property name=&quot;enableMarin&quot; value=&quot;${LionBusiness.MarinLog.Enabled}&quot;&gt;&lt;/property&gt;
&lt;/bean&gt;
[/xml]

对搜索请求的处理采用设计模式中的职责链模式，processorChain中包含了对搜索请求进行处理的一系列processor，处理的顺序和配置文件中processor出现的顺势相同。
preProcessorNode: 对biz的请求做初步的处理，例如提取出城市，商区，类别，算法等信息，并将这些信息放在context中。
queryProcessorNode: 搜索应用会对query进行重写，例如同义词，近义词处理，英文大小写等等；推荐应用会在query中加入更多的用户实时信息，这部分信息不能从索引中获得。
searchProcessorNode: 定制原有的搜索过程，对推荐结果和搜索结果的多策略融合在这一层实现。
postProcessorNode：搜索无结果少结果处理时，将原有的限制条件放开，可以得到指定数目的结果。
downgradeProcessorNode：处理当前请求出错时采用降级服务，例如给出上传请求处理成功后的搜索结果。

bizer对外提供两种类型的接口：pigeon接口(公司自己开发的调用框架)和http接口。http接口的好处是可以搜索的结果可以在浏览器中以json的形式展现，方便调试，缺点是不能方便的监控服务是否调用成功和不能实现负载均衡；pigeon的好处是它可以像调用本地方法一样调用远程方法，并且自带负载均衡，能监控远程调用成功和失败的次数。bizer同时提供这两种接口，既方便了服务提供方自己调试和开发，又方便了服务使用方调用服务，并能对线上服务进行实时监控。


Searcher端的入口是SearchServlet类，核心是InnerSearcher类，SearchServlet通过request信息判断创建什么类型的InnerSearcher，创建好的InnerSearcher再通过request信息进行过滤，查询和排序操作。其中排序相关的代码如下：

[java]

RequestInfo requestInfo = requestInfoCreater.createRequestInfo(request);
DpCollector collector = new DpCollector(requestInfo.filter, requestInfo.sort, requestInfo.statisticList);
luceneSearcher.search(requestInfo.query, collector);
requestInfo.sort.done(luceneSearcher.getTopReaderContext());

[/java]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2014-08-18 15:04:14</wp:post_date>
		<wp:post_date_gmt>2014-08-18 07:04:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%90%9c%e7%b4%a2%e6%9e%b6%e6%9e%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>query under standing--博客</title>
		<link>http://www.dcharm.com/?p=41</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2014-07-25 17:33:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>城市定位--博客</title>
		<link>http://www.dcharm.com/?p=43</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=43</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2014-07-25 17:34:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>AB统计--程序设计和测试</title>
		<link>http://www.dcharm.com/?p=45</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2014-07-25 17:34:38</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>架构设计</title>
		<link>http://www.dcharm.com/?p=60</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2014-08-05 18:47:54</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Mac上Intellij使用技巧</title>
		<link>http://www.dcharm.com/?p=62</link>
		<pubDate>Mon, 11 Aug 2014 13:01:39 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>在Intellij中创建项目的简单过程</strong>

1. 新建一个project.

2. 在新建的project里面添加module.

3. 将module里面的某个文件夹标记为root directory，才能在root directory里面添加package，添加package后能在package中添加类。

&nbsp;

<strong>在Intellij中删除recent projects</strong>

1. Fn + delete

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2014-08-11 21:01:39</wp:post_date>
		<wp:post_date_gmt>2014-08-11 13:01:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>intellij%e4%bd%bf%e7%94%a8%e6%8a%80%e5%b7%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Java容易犯的错误</title>
		<link>http://www.dcharm.com/?p=65</link>
		<pubDate>Fri, 15 Aug 2014 06:27:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[Java开发中会碰到一些容易犯的错误，可能会带来线上事故，我在这里记录下来以常常提醒自己。
1. int 和 Integer比较
[java]
Integer x = null;

if(x &gt; 0)

{

......

}
[/java]

如果x不是null，上述代码不会产生任何异常，但是如果x是null，则会产生万恶的java.nullpointerexception异常，该问题在线下测试时可能不会被覆盖而被带到线上产生严重的后果。

2. Java的函数重写
Java中通过继承和方法的重写(overriding)实现了类的多态，用到重写时一定要分析程序在运行时调用的是哪一个方法。举个例子：
[java]
public class A {
    protected void a()
    {
        System.out.println(this);
        this.b();
    }

    protected void b()
    {
        System.out.println(&quot;A-&gt;b&quot;);
    }
}

public class B extends A {

    public static void main(String[] args)
    {
        B b = new B();
        b.a();
    }

    @Override
    protected void a()
    {
        super.a();
    }

    @Override
    protected void b()
    {
        System.out.println(&quot;B-&gt;b&quot;);
    }
}
[/java]
上面的代码中B继承了A，并重写了A中的方法a和b。现在在B的main方法中new一个B的实例，并调用b方法，那么程序的输出会是什么呢？估计很多人的答案是
[shell]
A@52cc8049
A-&gt;a
[/shell]
而实际上的输出是
[shell]
B@52cc8049
B-&gt;b
[/shell]
也就是说this指针一直指向的是B类的实例，调用实例方法时是用函数签名从最底层的子类开始寻找，只有子类中没有对应的方法时，才会到上一层的父类中寻找。

3. 伪泛型
Java中的泛型是在编译器这个层次来实现的，生成的Java字节码中是不包含泛型中的类型信息，这个过程就称为类型擦除。这么说比较抽象，大家可以看看下面这段代码：
[java]
        Map&lt;String, String&gt; map1 = new HashMap&lt;String, String&gt;();
        map1.put(&quot;a&quot;, &quot;b&quot;);
        Object obj = (Object)map1;
        Map&lt;String, Number&gt; map2 = (Map&lt;String, Number&gt;)obj;
[/java]
这段代码在运行时不会抛出任何异常，因为obj中已经不存在map1的泛型信息了，将map1转化为任何的Map类型都是可以的。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2014-08-15 14:27:47</wp:post_date>
		<wp:post_date_gmt>2014-08-15 06:27:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e5%b8%b8%e7%8a%af%e7%9a%84bug</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="%e6%b3%9b%e5%9e%8b"><![CDATA[泛型]]></category>
		<category domain="post_tag" nicename="%e7%bb%a7%e6%89%bf"><![CDATA[继承]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3695</wp:comment_id>
			<wp:comment_author><![CDATA[荷兰网]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.zhongguohelanwang.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.182.136.109</wp:comment_author_IP>
			<wp:comment_date>2015-05-10 16:18:11</wp:comment_date>
			<wp:comment_date_gmt>2015-05-10 08:18:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>荷兰网</strong>

好文章，内容出口成章.禁止此消息：nolinkok@163.com]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1431245891]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431245891.813081;s:7:"message";s:80:"Akismet无法复查此条评论（回应：invalid），将尽快自动重试。";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:51:{s:15:"comment_post_ID";i:65;s:14:"comment_author";s:9:"荷兰网";s:20:"comment_author_email";s:0:"";s:18:"comment_author_url";s:33:"http://www.zhongguohelanwang.com/";s:15:"comment_content";s:93:"<strong>荷兰网</strong>

好文章，内容出口成章.禁止此消息：nolinkok@163.com";s:12:"comment_type";s:9:"trackback";s:7:"user_ip";s:15:"123.182.136.109";s:10:"user_agent";s:50:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)";s:8:"referrer";s:27:"http://www.dcharm.com/?p=65";s:4:"blog";s:21:"http://www.dcharm.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:27:"http://www.dcharm.com/?p=65";s:21:"akismet_comment_nonce";s:6:"failed";s:10:"POST_title";s:9:"荷兰网";s:8:"POST_url";s:33:"http://www.zhongguohelanwang.com/";s:12:"POST_excerpt";s:65:"好文章，内容出口成章.禁止此消息：nolinkok@163.com";s:14:"POST_blog_name";s:9:"荷兰网";s:15:"SERVER_SOFTWARE";s:11:"nginx/1.4.1";s:11:"REQUEST_URI";s:22:"/wp-trackback.php?p=65";s:4:"USER";s:8:"www-data";s:4:"HOME";s:8:"/var/www";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:12:"QUERY_STRING";s:4:"p=65";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"289";s:15:"SCRIPT_FILENAME";s:45:"/usr/share/nginx/html/dcharm/wp-trackback.php";s:11:"SCRIPT_NAME";s:17:"/wp-trackback.php";s:12:"DOCUMENT_URI";s:17:"/wp-trackback.php";s:13:"DOCUMENT_ROOT";s:28:"/usr/share/nginx/html/dcharm";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:15:"123.182.136.109";s:11:"REMOTE_PORT";s:5:"62681";s:11:"SERVER_ADDR";s:13:"115.29.175.99";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:14:"www.dcharm.com";s:5:"HTTPS";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:87:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*";s:12:"HTTP_REFERER";s:27:"http://www.dcharm.com/?p=65";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:50:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)";s:9:"HTTP_HOST";s:14:"www.dcharm.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"289";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:5:"Close";s:8:"PHP_SELF";s:17:"/wp-trackback.php";s:12:"REQUEST_TIME";s:10:"1431245890";s:25:"comment_post_modified_gmt";s:19:"2014-12-28 14:31:02";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431506383.451436;s:7:"message";s:31:"admin修改评论状态为trash";s:5:"event";s:12:"status-trash";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431506383]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>APP原型设计--balsamiq</title>
		<link>http://www.dcharm.com/?p=74</link>
		<pubDate>Sat, 16 Aug 2014 09:13:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[<a title="Balsamiq Mockups" href="http://balsamiq.com/" target="_blank">Balsamiq Mockups</a> 是款能够帮助App开发者或者Web开发者使用线框图快速建立低保真原型的设计软件，使用它时就像在白板上制作草图一样简单，快速和方便。

附一张我按照教程设计的草图：

<a href="http://www.dcharm.com/wp-content/uploads/2014/08/mockup.png"><img class="alignnone wp-image-79" src="http://www.dcharm.com/wp-content/uploads/2014/08/mockup.png" alt="mockup" width="453" height="389" /></a>

Balsamiq的基本使用方法

1. 添加控件

添加控件有3中方法：将控件从UI控件库中拖放到画布上；使用左上角的快速添加工具；复制粘贴。快速添加工具在画布的左上角，有时会觉得将鼠标移动过去比较麻烦，此时可以使用'/'键将焦点变换到快速添加工具上。

2. 控件选择

Balsamiq中有多种控件选择的方式：
<ul>
	<li>单击UI控件，这种方式一次只能选中一个控件。</li>
	<li>用鼠标拖出一个矩形区域，区域内的控件都会被选中。</li>
	<li>点击时按住shift键，则能将控件加入到当前的选择中。</li>
	<li> 点击时按住command键，则能将控件从当前的选择中移除。</li>
</ul>
3. Group

Balsamiq中可以指定几个控件组成一个group。几个控件构成一个group之后，在拖动时，group里所有的控件会跟着一起移动，删除时也会一起被删除，很方便。更方便的是可以使用该group创建一个symbol,  然后就可以像创建Balsamiq中的控件一样创建该group, 而不用分布创建group中的每一个控件，调整它们的位置。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2014-08-16 17:13:45</wp:post_date>
		<wp:post_date_gmt>2014-08-16 09:13:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>app%e5%8e%9f%e5%9e%8b%e8%ae%be%e8%ae%a1-balsamiq</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="app"><![CDATA[app]]></category>
		<category domain="category" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="%e5%8e%9f%e5%9e%8b%e8%ae%be%e8%ae%a1"><![CDATA[原型设计]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[79]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>linux小技巧</title>
		<link>http://www.dcharm.com/?p=93</link>
		<pubDate>Mon, 18 Aug 2014 09:16:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[我收藏了一些linux上看似简单但是可以大大地提高工作效率的小技巧。

<strong>1. 格式化json</strong>
<pre class="default prettyprint prettyprinted" style="color: #000000;"><code><span class="pln">有时需要在服务上调试和查看json信息，没有格式的json信息看起来头都大了，下面这个命令使用python格式化json，大大提高了可读性。</span></code></pre>

[shell]
echo '{a:'1', b:'2'}' | python -m json.tool
[/shell]

<strong>2. 文件查找</strong>
查找目录下的所有文件中是否含有某个字符串 
find .|xargs grep -ri "IBM" 
查找目录下的所有文件中是否含有某个字符串,并且只打印出文件名 
find .|xargs grep -ri "IBM" -l 

<strong>3. 文件解压</strong>
这里总结的linux下文件压缩和解压方法是对<a href="http://www.jb51.net/LINUXjishu/43356.html">这篇文章</a>的总结，文章写的很好也很全面，我稍稍进行了调整。
Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以tar结尾的。tar命令常用的选项：
[shell]
-c: 建立压缩档案 
-x：解压 
-t：查看内容 
-r：向压缩归档文件末尾追加文件 
-u：更新原压缩包中的文件 
[/shell]
压缩解压都要用到这些选项，可以和别的选项连用，但同时最多使用其中的一个选项。其它可选的参数： 
[shell]
-z：有gzip属性的 
-j：有bz2属性的 
-Z：有compress属性的 
-v：显示所有过程 
-O：将文件解开到标准输出 
-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。  
[/shell]
下面来举例说明一下tar的用法： 
　　[shell]# tar -cf all.tar *.jpg [/shell]
　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。
　　[shell]# tar -rf all.tar *.gif [/shell]
　　这条命令是将所有.gif的文件增加到all.tar的包里面去。
   [shell]# tar -uf all.tar logo.gif [/shell]
　　这条命令是更新原来tar包all.tar中logo.gif文件。 
　　[shell]# tar -tf all.tar [/shell]
　　这条命令是列出all.tar包中所有文件。 
　　[shell]# tar -xf all.tar [/shell]
　　这条命令是解出all.tar包中所有文件。
为了方便用户在打包解包的同时可以压缩或解压文件，tar可以在打包或解包的同时调用其它的压缩程序：gzip、bzip2等。 
　　1) tar调用gzip 
　　gzip是GNU组织开发的一个压缩程序，gz结尾的文件就是gzip压缩的结果。tar中使用z这个参数来调用gzip。
　　[shell]# tar -czf all.tar.gz *.jpg [/shell]
　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包，包名为all.tar.gz 
　　[shell]# tar -xzf all.tar.gz [/shell]
　　这条命令是将上面产生的包解开。 
　　2) tar调用bzip2 
　　bzip2是一个压缩能力更强的压缩程序，bz2结尾的文件就是bzip2压缩的结果。tar中使用-j这个参数来调用gzip。
　　[shell]# tar -cjf all.tar.bz2 *.jpg [/shell]
　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包，包名为all.tar.bz2 
　　[shell]# tar -xjf all.tar.bz2 [/shell]
　　这条命令是将上面产生的包解开。 






]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2014-08-18 17:16:09</wp:post_date>
		<wp:post_date_gmt>2014-08-18 09:16:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux%e5%b0%8f%e6%8a%80%e5%b7%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="%e6%96%87%e4%bb%b6%e6%9f%a5%e6%89%be"><![CDATA[文件查找]]></category>
		<category domain="post_tag" nicename="%e6%96%87%e4%bb%b6%e8%a7%a3%e5%8e%8b"><![CDATA[文件解压]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Swift开发中碰到的错误</title>
		<link>http://www.dcharm.com/?p=110</link>
		<pubDate>Sun, 26 Oct 2014 14:10:27 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=110</guid>
		<description></description>
		<content:encoded><![CDATA[始终认为程序是我们表达观点和态度的一种方式，而在公司做事，是别人通过我们表达，于是利用自己有限的空闲时间写写博客，写写APP，做回自己。写APP的过程中碰到了一些坑，在这里做简要的记录，一来方便自己日后查阅，二来希望能帮到一些同学。
<strong>1. This class is not key value coding-compliant for the key</strong>

我先是为storyboard中的一个按钮btn添加了IBAction：onNextStep，后来觉得这个事件是多余的，于是删除了该方法。在模拟器重运行时始终报错：this class is not key value coding-compliant for the key onNextStep，不论是我删除按钮btn还是重新添加IBAction：onNextStep，这个错误仍然存在，因此我怀疑是在storyboard图形界面上做的操作没有起作用。通过查阅google上的文档，我发现storyboard的本质还是xml的配置文件，通过以xml形式打开storyboard，我发现了IBAction：onNextStep对应的配置项目，将这一行删除，程序就可以正确运行了。

<strong>2.The model used to open the store is incompatible with the one used to create the store} </strong>
我在使用某个版本的Model创建并存储数据后改变了model的字段，再运行程序时就会报上面的错误，它告诉我们现在的Model和存储的数据对不上。那怎么解决这个问题呢?那就是把APP从模拟器中删除，缓存的数据也就随之被删除，也就不存在Model和数据对不上的问题了。

<strong>3.Xcode build failed.(构建失败)</strong>
有时在Xcode中build失败时，它不会给出相应的错误日志，这个时候我们要通过report navigator去查看相应的错误日志。下图中蓝色的聊天图标一样的那个按钮就是report navigator，点击它后，所有的错误日志都会展示在下面，红色的感叹号表示有错误发生。<a href="http://www.dcharm.com/wp-content/uploads/2014/10/xcode.png"><img src="http://www.dcharm.com/wp-content/uploads/2014/10/xcode.png" alt="xcode" width="1704" height="346" class="alignnone size-full wp-image-165" /></a>

<strong>4. Cannot invoke '==' with an argument list of type </strong>
使用其它编程语言操作字符串对象时，我们会首先判断该对象是否为空，否则会报空指针的错误。在swift中我使用下面的语句检查字符串时候为空：
[python]
var s = &quot;&quot;
if s == nil {
    //do something
}
[/python]
但是编译器给出了Cannot invoke '==' with an argument list of type的错误。于是我们会想到底怎样去检验字符串是否为空呢？按照苹果官方给出的解释：Non-optional types may no longer be compared to nil, and ImplicitlyUnwrappedOptional no longer conforms to BooleanType. 这句话是告诉开发者，只有optional类型的对象才可以和nil比较。了解这一点知识以后，我们可以对上述语句做出相应的修改：
[python]
var s:String? = &quot;&quot;
if s == nil {
   //do something
}
[/python]
这样程序就可以正确的执行了。

<strong>5.Could not insert new outlet connection</strong>
建立outlet连接的时候xcode报Could not insert new outlet connection的错误，如下图所示：<a href="http://www.dcharm.com/wp-content/uploads/2014/10/conn.png"><img src="http://www.dcharm.com/wp-content/uploads/2014/10/conn.png" alt="conn" width="1094" height="396" class="alignnone size-full wp-image-193" /></a>
这个错误很莫名其妙，真实的原因是由于xocde的缓存文件有问题，我们需要做的就是退出xcode,进入其缓存文件夹/Users/qiangwang/Library/Developer/Xcode/DerivedData/，删除掉所有的缓存文件。如果大家碰到其它莫名其妙的问题，也尝试一下这个操作，大部分情况下可以应对。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2014-10-26 22:10:27</wp:post_date>
		<wp:post_date_gmt>2014-10-26 14:10:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>110</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="build-failed"><![CDATA[build failed]]></category>
		<category domain="category" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="nil"><![CDATA[nil]]></category>
		<category domain="post_tag" nicename="swift"><![CDATA[swift]]></category>
		<category domain="post_tag" nicename="xcode"><![CDATA[xcode]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>WordPress速度优化</title>
		<link>http://www.dcharm.com/?p=138</link>
		<pubDate>Sun, 28 Dec 2014 14:13:24 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[WordPress是风靡国内外的开源博客系统，操作简单，插件丰富，像很多朋友一样，我的博客也是用它搭建的。近来发现我的博客的访问速度下降的很厉害，在查阅相应的文档后对wordpress进行了相应的优化，相应时间有明显的改善。

<strong>1. 禁用google字体服务</strong>
WordPress在页面中使用了Google提供的字体服务，而谷歌提供的服务很容易被墙，导致在访问相应的静态资源会超时，从而拖慢整个博客的加载速度。
1.1问题表现
打开浏览器的开发者，访问自己的博客，从Network选项中查看页面的静态资源加载情况，会发现页面一直加载不出来，载入fonts.google.com的静态资源出现超时情况，如下图所示：<a href="http://www.dcharm.com/wp-content/uploads/2014/12/t.png"><img src="http://www.dcharm.com/wp-content/uploads/2014/12/t.png" alt="time" width="1120" height="818" class="alignnone size-full wp-image-139" /></a>
1.2解决方法
解决的方法有两个，一是可以禁用google的字体服务，页面会采用默认字体:找到wp-includes/script-loader.php文件中代码语句：
[php]
$open_sans_font_url = &quot;//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;subset=$subsets&quot;;
[/php]，
将其注释掉
[php]//$open_sans_font_url = &quot;//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;subset=$subsets&quot;; 
[/php]
而是使用360的字体服务，将上面的代码改为
[php]
$open_sans_font_url = &quot;//fonts.useso.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;subset=$subsets&quot;;
[/php]

2.禁用google analytics功能
我的博客中使用了google analytics来进行网站流量和受众分析，不得不说google analytics的功能完备，图标丰富，操作简单，一眼扫过就对自己博客的运行状态有个大致的了解。用了一段时间之后，google analytics的js老是被墙，加载很慢，从而拖慢整个网页的加载速度，我决定转用百度统计工具。使用方法和google analytics类似，也是在页面中加入一段百度提供的js代码，但是由于百度是国内的网站服务提供商，没有被墙，所以在响应速度上有很大的优势。具体内容请阅读：<a href="http://tongji.baidu.com/web/welcome/login" title="百度统计工具" target="_blank">百度统计工具</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2014-12-28 22:13:24</wp:post_date>
		<wp:post_date_gmt>2014-12-28 14:13:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wordpress%e4%bc%98%e5%8c%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="wordpress"><![CDATA[wordpress]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
		<category domain="post_tag" nicename="%e9%80%9f%e5%ba%a6"><![CDATA[速度]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Java搭建Restful web服务</title>
		<link>http://www.dcharm.com/?p=151</link>
		<pubDate>Tue, 30 Dec 2014 08:15:42 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[首次尝试用Java搭建restful风格的web服务,这篇文章不打算详述搭建服务过程中的每一个步骤，而仅仅写下我在这个过程中遇到的问题和解决问题后的心得。对于其中有些问题某些问题的思考可能还不过全面，以后随着经验的积累还会不断地更新。

<strong>1. spring mvc还是jersey?</strong>

<strong>2. jdbc template还是mybatis?</strong>
对数据的增删改查有2种方式:jdbc template和mybatis，二者我都进行过尝试，我极力推荐通过mybatis对数据库中的数据进行操作。Mybatis是支持sql,存储过程和对象映射的持久化框架，使用它可以极大的减少jdbc相关的java代码，也不用手动将数据库中的记录手动转换为java中的对象。说了这么多好处，老规矩，给个简单的例子进行对比说明。
使用jdbc template的例子：
[java]
    public boolean create(Book book) {
        final Map&lt;String, Object&gt; paraMap = new HashMap&lt;String, Object&gt;();
        paraMap.put(&quot;extresource&quot;, book.getExternalResource());
        paraMap.put(&quot;isbn10&quot;, book.getIsbn10());
        paraMap.put(&quot;title&quot;, book.getTitle());
        final String sql = &quot;insert into Book (extresource, isbn10, title) &quot; +
                &quot;values (:extresource, :isbn10, :title)&quot; ;
        return jdbcTemplate.update(sql, paraMap);
     }
[/java]
需要开发者手动将book对象中的值填充到map中，然后在sql语句执行是作为参数传递，当book中的属性很多时，代码看起来就相当冗长，而增加了工作量。Mybatis的出现很好的解决了这个问题，下面是mybatis的例子
[java]
    public boolean create(Book book) {
        int r = sqlSession.insert(&quot;com.nianyike.base.book.Book.insertBook&quot;, book);
        sqlSession.commit();
        return r &gt; 0;
    }
[/java]
xml的相关配置
[xml]
    &lt;insert id=&quot;insertBook&quot;
            parameterType=&quot;com.nianyike.base.book.domain.Book&quot;
            flushCache=&quot;true&quot;
            keyProperty=&quot;id&quot;
            useGeneratedKeys=&quot;true&quot;
            timeout=&quot;20&quot;&gt;
        insert into NYK_Book (externalResource, isbn10, isbn13, title, subtitle, imgUrl, imgPath, authors, translators, publisher,
          pubTime, price, pageNum, summary, catalog, score, addTime, updateTime)
        values (#{externalResource}, #{isbn10}, #{isbn13}, #{title},  #{subTitle}, #{imgUrl}, #{imgPath}, #{authors},
          #{translators}, #{publisher}, #{pubTime}, #{price}, #{pageNum}, #{summary}, #{catalog}, #{score}, #{addTime}, #{updateTime})
    &lt;/insert&gt;
[/xml]
mybatis会通过参数的名称自动从book对象中载入相应的值填充到sql语句中，不用我们自己手动填写。
<strong>3. 配置基于xml还是annotate？</strong>

<strong>4. web项目结构和war包结构</strong>
web项目的结构如下图所示：
<a href="http://www.dcharm.com/wp-content/uploads/2014/12/base.png"><img src="http://www.dcharm.com/wp-content/uploads/2014/12/base.png" alt="web project" width="371" height="529" class="alignnone size-full wp-image-154" /></a>
nianyike_api下面包含多个web模块，base是其中的一个。base下面有两个文件夹，src和target,src存放的是代码和资源文件，target中存放的是打包生成的war文件；src/main/java中存放的是java代码，src/main/resources存放的是和配置相关的资源文件,src/test存放的是测试相关的java代码和资源文件。
解压后的war包的结构如下图所示：
<a href="http://www.dcharm.com/wp-content/uploads/2014/12/war.png"><img src="http://www.dcharm.com/wp-content/uploads/2014/12/war.png" alt="war" width="264" height="158" class="alignnone size-full wp-image-157" /></a>
META-INF中存放的是用来配置应用程序、扩展程序、类加载器和服务的元数据。MANIFEST.MF的内容：
[shell]
Manifest-Version: 1.0
Build-Jdk: 1.7.0_72
Built-By: qiangwang
Created-By: IntelliJ IDEA
Main-Class: ${start-class}
[/shell]
其中记录了构建war包的jdk信息和程序的入口类。WEB-INF是Java的WEB应用的安全目录,是客户端无法访问，只有服务端可以访问, WEB-INF/class/com对应着src/main/java中编写的类，WEB-INF/class/mybatis对应着src/main/resources中的资源文件，WEB-INF/lib中存放着依赖的jar包。
理解war包的结构，对于服务实现有一定的帮助，以载入mybatis的配置文件为例。 假设mybatis的配置文件存在mybatis文件夹下的core.xml中，那么读取资源文件的方式为：
[java]
            String resource = &quot;mybatis/core.xml&quot;;
            InputStream inputStream = Resources.getResourceAsStream(resource);
            sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);
[/java]
注意资源文件的路径是mybatis/core.xml，而不是resources/mybatis/core.xml,这是因为程序是按照CLASSPATH来载入文件，而程序运行时CLASSPATH的根目录对应着war包种的classes文件夹，classes中存放的是resources的子目录，而不是resources目录，所以路径写成resources/mybatis/core.xml后会找不到相应的文件。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2014-12-30 16:15:42</wp:post_date>
		<wp:post_date_gmt>2014-12-30 08:15:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e6%90%ad%e5%bb%barestful-web%e6%9c%8d%e5%8a%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Objective-C和Swift 字符串操作对比</title>
		<link>http://www.dcharm.com/?p=169</link>
		<pubDate>Sun, 04 Jan 2015 02:39:34 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[Swift官方的tutorial实在是不全，一些字符串操作经常使用的方法在tutorial中没有覆盖到，更加邪恶的是在objective-c中用的很顺手的一些函数在swift中没有对应的实现，我们需要手动将String转换为NSString,然后再调用NSString中的方法。这篇文章对比了objective-c和swift中经常使用到的String对象的操作。

<strong>1. String对象的长度 </strong>
NSString中求字符串的长度很简单：
[python]
var s = &quot;ab&quot; as NSString
var len = ab.length
[/python]
swift中字符串的长度再也不是string对象的一个属性，需要调用countElements方法去计算：
[python]
var s = &quot;mystring&quot;
var len = countElements(s)
[/python]

<strong>2. 是否包含特定的字符串 </strong>
NSString中判断是否包含另一个字符串很简单：
[python]
var s = &quot;ab&quot; as NSString
var c = s.containsString(&quot;a&quot;)
[/python]
String中的实现有点绕：
[python]
var s = &quot;ab&quot;
var c = s.rangeOfString(&quot;a&quot;) != nil
[/python]

<strong>3. subString方法的使用 </strong>
NSString中subString方法的使用也更加直接：
[python]
var s = &quot;abcd&quot;
var s1 = s.substringWithRange(NSMakeRange(0, 2))
[/python]
String中subString方法的使用有些绕：
[python]
var s = &quot;abcd&quot;
var s1 = s.substringWithRange(Range&lt;String.Index&gt;(start:s1.startIndex, end: advance(s1.startIndex, 2))) 
[/python]
关键是NSString中subString的用法和正则表达式NSRegularExpression结合的很好
[python]
var s1 = &quot;ab71.50元&quot;
let regx = NSRegularExpression(pattern: &quot;[0-9]+.[0-9]+&quot;, options:nil, error: nil)
let matche = regx?.firstMatchInString(s1, options: nil, range: NSMakeRange(0, countElements(s1)))
var s2 = (s1 as NSString).substringWithRange(matche!.range)
[/python]
match中的range参数和NSString中subString函数的range参数是同一个类型，不用再做多余的操作。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2015-01-04 10:39:34</wp:post_date>
		<wp:post_date_gmt>2015-01-04 02:39:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swift-%e5%ad%97%e7%ac%a6%e4%b8%b2%e6%93%8d%e4%bd%9c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="swift"><![CDATA[swift]]></category>
		<category domain="post_tag" nicename="%e5%ad%97%e7%ac%a6%e4%b8%b2"><![CDATA[字符串]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3694</wp:comment_id>
			<wp:comment_author><![CDATA[荷兰网]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.zhongguohelanwang.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.182.140.43</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 17:42:37</wp:comment_date>
			<wp:comment_date_gmt>2015-05-09 09:42:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>荷兰网</strong>

不错的文章，内容惊心动魄.禁止此消息：nolinkok@163.com]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1431164557]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431164557.5160871;s:7:"message";s:80:"Akismet无法复查此条评论（回应：invalid），将尽快自动重试。";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:51:{s:15:"comment_post_ID";i:169;s:14:"comment_author";s:9:"荷兰网";s:20:"comment_author_email";s:0:"";s:18:"comment_author_url";s:33:"http://www.zhongguohelanwang.com/";s:15:"comment_content";s:99:"<strong>荷兰网</strong>

不错的文章，内容惊心动魄.禁止此消息：nolinkok@163.com";s:12:"comment_type";s:9:"trackback";s:7:"user_ip";s:14:"123.182.140.43";s:10:"user_agent";s:50:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)";s:8:"referrer";s:28:"http://www.dcharm.com/?p=169";s:4:"blog";s:21:"http://www.dcharm.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:28:"http://www.dcharm.com/?p=169";s:21:"akismet_comment_nonce";s:6:"failed";s:10:"POST_title";s:9:"荷兰网";s:8:"POST_url";s:33:"http://www.zhongguohelanwang.com/";s:12:"POST_excerpt";s:71:"不错的文章，内容惊心动魄.禁止此消息：nolinkok@163.com";s:14:"POST_blog_name";s:9:"荷兰网";s:15:"SERVER_SOFTWARE";s:11:"nginx/1.4.1";s:11:"REQUEST_URI";s:23:"/wp-trackback.php?p=169";s:4:"USER";s:8:"www-data";s:4:"HOME";s:8:"/var/www";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:12:"QUERY_STRING";s:5:"p=169";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"307";s:15:"SCRIPT_FILENAME";s:45:"/usr/share/nginx/html/dcharm/wp-trackback.php";s:11:"SCRIPT_NAME";s:17:"/wp-trackback.php";s:12:"DOCUMENT_URI";s:17:"/wp-trackback.php";s:13:"DOCUMENT_ROOT";s:28:"/usr/share/nginx/html/dcharm";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"123.182.140.43";s:11:"REMOTE_PORT";s:5:"60771";s:11:"SERVER_ADDR";s:13:"115.29.175.99";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:14:"www.dcharm.com";s:5:"HTTPS";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:87:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*";s:12:"HTTP_REFERER";s:28:"http://www.dcharm.com/?p=169";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:50:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)";s:9:"HTTP_HOST";s:14:"www.dcharm.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"307";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:5:"Close";s:8:"PHP_SELF";s:17:"/wp-trackback.php";s:12:"REQUEST_TIME";s:10:"1431164551";s:25:"comment_post_modified_gmt";s:19:"2015-01-04 04:22:45";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431506382.0779259;s:7:"message";s:31:"admin修改评论状态为trash";s:5:"event";s:12:"status-trash";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431506382]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Swift和Objective-c类型对比</title>
		<link>http://www.dcharm.com/?p=179</link>
		<pubDate>Tue, 06 Jan 2015 08:28:22 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=179</guid>
		<description></description>
		<content:encoded><![CDATA[Swift能够兼容Objective-C中的大多数类型。
<strong>1.原始类型 </strong>
Swift为C中的整数原始类型(primitive integer types)提供了相应的类型，例如char, int, float, double，但是在这些类型和Swift的整数类型,例如Int,之间不能隐式的转换。类型之间的对应关系如下：
<a href="http://www.dcharm.com/wp-content/uploads/2015/01/type.png"><img src="http://www.dcharm.com/wp-content/uploads/2015/01/type.png" alt="type" width="697" height="555" class="alignnone size-full wp-image-180" /></a>

<strong>2.枚举类型 </strong>
引用时，Swift会将Objective-C中用NS_ENUM标记的枚举类型转换为Swift中的枚举类型，也就是说NS_ENUM定义的枚举在Swift中被引用时枚举名称的前缀会被截断。例如：
[c]
typedef NS_ENUM(NSInteger, UITableViewCellStyle) {
UITableViewCellStyleDefault,
UITableViewCellStyleValue1,
UITableViewCellStyleValue2,
UITableViewCellStyleSubtitle
};
[/c]
在swift中引用时枚举的定义会变成如下形式：
[python]
enum UITableViewCellStyle: Int {
   case Default
   case Value1
   case Value2
   case Subtitle
}
[/python]
可以看到枚举变量的前缀被截断，引用后使用枚举的方式如下：
[python]
let cellStyle: UITableViewCellStyle = .Default
[/python]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2015-01-06 16:28:22</wp:post_date>
		<wp:post_date_gmt>2015-01-06 08:28:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swift%e5%92%8cobjective-c%e7%b1%bb%e5%9e%8b%e5%af%b9%e6%af%94</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="swift"><![CDATA[swift]]></category>
		<category domain="post_tag" nicename="%e6%9e%9a%e4%b8%be"><![CDATA[枚举]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Githup常用命令</title>
		<link>http://www.dcharm.com/?p=184</link>
		<pubDate>Wed, 07 Jan 2015 07:58:52 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=184</guid>
		<description></description>
		<content:encoded><![CDATA[在使用githup时经常要用到一些命令，本文在这里对它们进行了记录。

<strong>1.在本地新建分支并指向githup的仓库</strong>
[shell]
touch README.md
git init
git add README.md
git commit -m &quot;first commit&quot;
git remote add origin https://github.com/username/XX.git
git push -u origin master
[/shell]

<strong>2.远程分支操作 </strong>
<ul>
<li>显示所有远程分支	
[shell]
git remote -v
[/shell]
</li>

<li>
重命名远程分支
[shell]
git remote rename oldname newname
[/shell]
</li>

<li>
删除远程分支
[shell]
git remote rm github
[/shell]
</li>
</ul>

<strong>3.忽略本地仓库中的某些文件</strong>
有的时候，我们希望本地仓库中的一些文件不要被git管理，例如数据库权限配置文件和二进制文件，前者会泄露数据，后者会使得git出现莫名其妙的错误，此时我们需要使用到.gitignore文件，该文件的一般配置如下：
[python]
###################  
*.com  
*.class  
*.dll  
*.exe  
*.o  
*.so  
  
# Packages #  
############  
# it's better to unpack these files and commit the raw source  
# git has its own built in compression methods  
*.7z  
*.dmg  
*.gz  
*.iso  
*.jar  
*.rar  
*.tar  
*.zip  
  
# Logs and databases #  
######################  
*.log  
*.sql  
*.sqlite  
  
# OS generated files #  
######################  
.DS_Store  
.DS_Store?  
._*  
.Spotlight-V100  
.Trashes  
Icon?  
ehthumbs.db  
Thumbs.db  
[/python]



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2015-01-07 15:58:52</wp:post_date>
		<wp:post_date_gmt>2015-01-07 07:58:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="branch"><![CDATA[branch]]></category>
		<category domain="category" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="githup"><![CDATA[githup]]></category>
		<category domain="post_tag" nicename="ignore"><![CDATA[ignore]]></category>
		<category domain="post_tag" nicename="%e4%bb%a3%e7%a0%81%e7%ae%a1%e7%90%86"><![CDATA[代码管理]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Swift开发小记</title>
		<link>http://www.dcharm.com/?p=196</link>
		<pubDate>Thu, 08 Jan 2015 02:47:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=196</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1.class和structure对比 </strong>
class和structure有很多共同的地方：
<ul>
	<li>可以定义属性</li>
	<li>可以定义方法</li>
	<li>可以定义下标</li>
	<li>可以定义initializer方法</li>
	<li>可以实现特定的协议</li>
</ul>
它们的不同之处在于:
<ul>
	<li>class可以继承</li>
	<li>运行时可以检查class实例的类型</li>
	<li>class中的deinitializer可以释放分配给该class实例的资源</li>
	<li>class是引用传递，structure是值传递，举个例子：class的实例作为方法的参数时，传递的是该实例的引用，structure的实例作为方法的参数时，先会拷贝一份该实例，然后将拷贝传递给相应的方法。</li>
</ul>
<strong>2. 属性</strong>
[c]
//定义常量，该属性只能赋值一次
let x = 1
//定义变量，该属性可以赋值多次
var y = 2
//定义lazy变量，顾名思义，该属性只有在被使用时才会创建
var lazy z = DataImporter()
//静态变量
static var storedTypeProperty = &quot;Some value.&quot;
[/c]
<strong>3.json操作 </strong>
我们可以使用NSJSONSerialization类将json转换为基础对象，将基础对象转换为json。符合下列条件的对象才能转换为json：
最顶层的对象要么是NSArray，要么是NSDictionary。
所有对象必须是NSString, NSNumber, NSArray, NSDictionary, or NSNull中的某个类型的实例。
NSDictionary对象的key的类型必须是NSString。
数值类型的变量不能是NaN或者无穷大。

<strong>4.代理 </strong>
“Delegation is a design pattern that enables a class or structure to hand off (or delegate) some of its responsibilities to an instance of another type. This design pattern is implemented by defining a protocol that encapsulates the delegated responsibilities, such that a conforming type (known as a delegate) is guaranteed to provide the functionality that has been delegated. Delegation can be used to respond to a particular action, or to retrieve data from an external source without needing to know the underlying type of that source.”


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>196</wp:post_id>
		<wp:post_date>2015-01-08 10:47:35</wp:post_date>
		<wp:post_date_gmt>2015-01-08 02:47:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swift%e4%b8%ad%e7%9a%84class</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[json]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Mysql常用操作</title>
		<link>http://www.dcharm.com/?p=205</link>
		<pubDate>Sat, 10 Jan 2015 02:27:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=205</guid>
		<description></description>
		<content:encoded><![CDATA[Mysql数据库开源，操作简单，性能可靠，很多创业团队都它。我不是专业的DBA，也请不起，往往很多事情都需要自己动手解决，把这些问题和解决的方法记录下来方便以后查阅。

1. 删除table或者修改table的语句长时间没有响应
通过mysql命令
[sql]
show processlist;
[/sql]
可以发现相关相关语句都因为waiting for table metadata lock卡住了
[shell]
+-----+------+-----------------+---------------+---------+------+---------------------------------+---------------------------------+
| Id  | User | Host            | db            | Command | Time | State                           | Info                            |
+-----+------+-----------------+---------------+---------+------+---------------------------------+---------------------------------+
|  41 | root | localhost:51400 | nianyike_main | Query   | 2312 | Waiting for table metadata lock | DROP TABLE `NYK_User`           |
| 129 | root | localhost:51542 | nianyike_main | Sleep   | 2488 |                                 | NULL                            |
| 132 | root | localhost:51551 | nianyike_main | Sleep   | 2446 |                                 | NULL                            |
| 173 | root | localhost:51695 | nianyike_main | Query   | 2195 | Waiting for table metadata lock | SELECT COUNT(1) FROM `NYK_User` |
| 175 | root | localhost:51696 | NULL          | Sleep   |   23 |                                 | NULL                            |
| 290 | root | localhost:53379 | nianyike_main | Query   | 1025 | Waiting for table metadata lock | SELECT COUNT(1) FROM `NYK_User` |
| 291 | root | localhost:53380 | NULL          | Sleep   |   43 |                                 | NULL                            |
| 312 | root | localhost       | nianyike_main | Query   |    0 | init                            | show processlist                |
| 322 | root | localhost:53417 | nianyike_main | Sleep   |   23 |                                 | NULL                            |
| 323 | root | localhost:53418 | NULL          | Sleep   |   33 |                                 | NULL                            |
+-----+------+-----------------+---------------+---------+------+---------------------------------+---------------------------------+
[/shell]
具体的原因可以参考这篇文章：<a href="http://blog.itpub.net/26250550/viewspace-1071987/" title="table meta lock">table meta lock</a>。解决办法是kill命令将对该表的所有死锁的操作都kill掉，然后重新执行响应alter操作。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2015-01-10 10:27:56</wp:post_date>
		<wp:post_date_gmt>2015-01-10 02:27:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e5%b8%b8%e7%94%a8%e6%93%8d%e4%bd%9c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[mysql]]></category>
		<category domain="post_tag" nicename="mysql"><![CDATA[mysql]]></category>
		<category domain="post_tag" nicename="%e6%ad%bb%e9%94%81"><![CDATA[死锁]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Python的中文编码问题</title>
		<link>http://www.dcharm.com/?p=226</link>
		<pubDate>Mon, 19 Jan 2015 07:45:25 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=226</guid>
		<description></description>
		<content:encoded><![CDATA[Python中碰到的中文问题一般分为两种：代码中包含中文；处理的数据中包含中文。问题不一样，解决的方法也不尽相同，本文以实例的方式进行说明。
<strong>1. 代码中包含中文字符的问题 </strong>
实际问题中我们经常要使用到字符串的长度，例如"中"的字符串长度就是1，“中国”的字符串长度是2。在Python中我们使用下面的代码统计字符串长度：
[python]
print len('中')
[/python]
明明只有一个汉字，python给出的结果却是3,这是为什么呢？问题就出现在编码上, 通过如下代码展示python的默认编码：
[python]
import sys
sys.getdefaultencoding()
[/python]
发现python的默认编码是ascii，而ascii编码不能识别中文字符，所以不能把'中'识别为一个字符。该问题的通用解决方案是告诉python代码的编码是utf-8，一种方法是在源文件第一行添加：
[python]
# -*- coding: utf-8 -*-
[/python]
另一种方法是通过代码设置：
[python]
import sys
reload(sys)
sys.setdefaultencoding('utf8')
[/python]
此时再计算'中'的长度就是1了。

<strong>2. 数据中包含中文字符 </strong>
最常见的是使用python去读取包含中文字符的文件，对数据进行处理经常抛出异常“'ascii' codec can't encode characters ”。出现这种异常时，我们应该告诉python用utf-8的编码去读取文件中的数据。
[python]
import codecs

fh = codecs.open(file_path, 'r', 'utf-8')
for line in fh:
    ...
fh.close()
[/python]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2015-01-19 15:45:25</wp:post_date>
		<wp:post_date_gmt>2015-01-19 07:45:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python%e7%9a%84%e4%b8%ad%e6%96%87%e7%bc%96%e7%a0%81%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="%e4%b8%ad%e6%96%87"><![CDATA[中文]]></category>
		<category domain="post_tag" nicename="%e5%ad%97%e7%ac%a6%e4%b8%b2"><![CDATA[字符串]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Python层次聚类</title>
		<link>http://www.dcharm.com/?p=241</link>
		<pubDate>Thu, 29 Jan 2015 03:35:21 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=241</guid>
		<description></description>
		<content:encoded><![CDATA[Python中的机器学习包scikit-learn中提供了包括:kmeans, 谱向聚类, 层次聚类等在内的聚类算法。本文给出了一个对词向量进行层次聚类的例子。
词向量是由word2vec从某美食网站的点评中训练得到，输入是分好词语的点评，输出是词语机器相应的向量表达，该向量包含了词语的topic信息。其中"地瓜干"和“味道”对应的词向量如下：
[shell]
烤地瓜干 0.023900 -0.074154 -0.053311 0.050898 0.032620 0.063152 -0.079102 0.054041 -0.101911 0.020732 0.048214 -0.016593 0.013762 -0.014438 -0.051414 -0.074174 -0.085810 -0.153488 0.105758 -0.043557 0.083636 0.026229 0.020589 -0.026654 -0.045915 0.063763 -0.013517 -0.017294 -0.012439 0.047025 -0.087127 -0.017978 -0.017018 -0.053626 -0.169687 -0.034236 0.014664 0.080652 -0.029869 0.050214 -0.023713 -0.026406 -0.044686 -0.030102 0.075677 -0.033015 0.012958 -0.064553 0.010051 0.095926 -0.008956 0.023472 0.037246 -0.065795 -0.053187 -0.108478 -0.004179 -0.049561 -0.137982 0.013325 0.055596 0.097895 0.031104 0.114254 0.004196 -0.007302 -0.042147 -0.087675 0.102078 0.017627 0.050067 -0.025007 0.056838 -0.105257 0.005928 -0.106661 0.023686 -0.019047 -0.073131 0.032436 0.017822 0.017861 0.009253 -0.020935 0.035539 0.003766 -0.163344 -0.047807 -0.065776 0.095915 0.003413 0.002848 -0.153713 0.087088 0.045115 -0.043085 -0.011435 0.009995 -0.079044 -0.106176
味道 0.061314 -0.071877 0.418790 0.338448 -0.215006 0.372335 -0.258696 0.047149 -0.117234 -0.176145 0.117426 0.156657 0.329278 -0.013200 0.066156 -0.417722 -0.215757 0.263669 -0.047234 -0.246740 -0.118109 -0.145290 -0.333562 -0.084131 -0.118488 0.242246 0.470586 0.001410 0.365399 -0.262350 0.024926 0.167383 0.007875 0.086488 -0.358154 0.175465 0.211072 0.326755 -0.193666 0.014001 -0.026221 -0.041085 -0.179887 0.093815 0.317274 0.094765 -0.177265 0.271517 -0.425649 0.074087 -0.076167 0.285998 -0.197784 0.027265 -0.074254 0.387827 -0.217748 0.264666 -0.994056 -0.299657 -0.027445 -0.379010 -0.247097 0.366343 0.203482 -0.221738 -0.127007 -0.132907 -0.264935 0.020610 -0.082322 -0.250386 0.133331 -0.059177 0.220608 0.233710 -0.220914 0.152688 0.777170 -0.027022 -0.107491 -0.221157 0.098636 -0.036595 -0.043946 0.273627 0.353052 -0.371321 -0.247508 0.076888 -0.082806 0.239997 -0.461058 0.075419 -0.296484 -0.075943 -0.379841 0.014045 0.200210 0.065614
[/shell]
因为词向量中包含了词语潜在的topic信息，因此我们希望通过聚类算法将相同topic信息的词语聚在一个cluster中，再以此为基础从评论中抽取出摘要信息。使用Python进行聚类的代码如下：
[python]
import numpy as np
import pandas as pd
from sklearn.cluster import AgglomerativeClustering
from sklearn.metrics import pairwise_distances

#从文件中读取词向量
path = 'data_path'
dat = pd.read_csv(path, sep=' ', header=None)

#n_clusters=50表示最终的聚类有50个
#affinity=&quot;euclidean&quot;表示向量之间的距离是欧式距离
#linkage=&quot;ward&quot; 表示聚类的算法的目标是最小化每个cluster内部向量距离的均方误差，此外还可以选&quot;average&quot;和&quot;maximum&quot;
model = AgglomerativeClustering(n_clusters=50, affinity=&quot;euclidean&quot;, linkage=&quot;ward&quot;)
model.fit(dat.iloc[:,1:101])
df = pd.DataFrame({'word':dat.iloc[:,0], 'cluster' : model.labels_})

#将聚类的结果写到文件中
cluster_list = list()
for key, val in df.groupby(['cluster']):
    cluster_list.append(' '.join(val.word.values))
cluster_list = pd.Series(cluster_list)
cluster_list.to_csv('result_path')
[/python]

从聚类的结果中选取出一些有意思的cluster:
[python]
朋友   个人   同事   老公   生日   同学   妈妈   孩子   蜜   老婆   儿子   小伙伴   男朋友   爸爸   小孩   宝宝   小朋友   家人   好友   女儿   友       老人   女朋友   姐妹   全家   姐   一行   大人   家里人   领导   亲戚   男友   父母   小孩子   人才   奶奶   女友   婆婆   宝贝   弟弟   哥们   媳妇       友人   妞   同伴   伙伴   室友   长辈   对象   全家人   姥姥   表妹   家长   老友   公公   死党   舅舅   长假   母亲   姐夫   外公   表姐   老小   姨       老朋友   老爹   小宝宝   姨妈   表弟   姑姑   老总   师兄   大年   哥们儿   侄女   小妞   基友   闺女   嫂子   侄子   老哥   外甥   密友   姥爷   公婆       大宝   舅妈   老弟   师姐   远道   外甥女   丈母娘   班长   囡囡   姑妈   老头子   姊妹   老同事   学长   导师   少爷   岳父   师妹   姨夫   舅   哈尼       上司   盛情   妻子   的哥   小姑   妹夫   伴娘   姑父   师弟   战友   岳母   阿奴   相公   女伴   农历   爹爹   佳节   爹地   老伴   小孩儿   婶婶       爱人   闻香   弟妹   老丈人   小姨   二老   班主任   嫂嫂   弟兄   孙女   队友   小宝贝   堂妹   大姑   奖学金   老公公   堂弟   蓝盆友   亲属   亲家       结婚证   大舅   阴历   宝儿   侄儿   姨父   干爹   堂姐   小姨子   丈人   伴郎   麻麻来   人中   小姑子   阳历   表嫂   穿堂   弟媳   哥儿们   师哥   伯    母   伯父   老父亲   小舅子   父母亲   小舅   干儿子   秋秋   外孙   请帖   表姐夫   闻风   姑夫   亲眷   辅导员   金婚   远房亲戚   师母   干女儿   月&gt;    老   家眷   娘家人   姨婆   喜帖   外孙女   小叔子   舅母   宝妈   麻友   寿辰   恩师   组员   姬友   老伴儿   刘先森   银婚   表舅   女朋   表妹夫   顶    头上司   小基友   大舅子   冰友   教友   宋宋   乔帮主   堂兄
牛蛙   鱼头   干锅   鲶鱼   香辣   毛血旺   鲈鱼   蛙   椒盐   口水鸡   泡椒   豆豉   金牌   黑鱼   水煮鱼   鱼翅   鹅   鸡爪   钵钵鸡
[/python]
数据中的每一行代表一个cluster，可以看出第一个cluster是和吃饭的人相关，第二个cluster就是菜名。到此，初步的聚类处理就完成了，需要注意的是在聚类中并不是所有的cluster都有意义，这部分cluster可以当做噪音过滤掉。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date>2015-01-29 11:35:21</wp:post_date>
		<wp:post_date_gmt>2015-01-29 03:35:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python%e5%b1%82%e6%ac%a1%e8%81%9a%e7%b1%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="pytho"><![CDATA[pytho]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<category domain="post_tag" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<category domain="post_tag" nicename="%e8%81%9a%e7%b1%bb"><![CDATA[聚类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Jinja2使用小记</title>
		<link>http://www.dcharm.com/?p=249</link>
		<pubDate>Fri, 30 Jan 2015 04:14:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://jinja.pocoo.org/">Jinja2</a>是功能齐全的python模板引擎，也是使用最为广泛的python模板引擎之一。它支持unicode,沙盒环境执行，自动escape不安全的html代码，而且支持从2.4到3的所有python版本。
Jinja2号称自己设计美兼功能强大，使用了一段时间之后我认为它确实是对得起给自己的这个评价。
    从官网扣了一小段代码来展示jinja2在<font color="red">设计上的美感</font>
[python]
{% extends &quot;layout.html&quot; %}
{% block body %}
  &lt;ul&gt;
  {% for user in users %}
    &lt;li&gt;&lt;a href=&quot;{{ user.url }}&quot;&gt;{{ user.username }}&lt;/a&gt;&lt;/li&gt;
  {% endfor %}
  &lt;/ul&gt;
{% endblock %}
[/python]
代码虽短，五脏俱全，其中extends展示的是模板之间的继承，for展示了模板语言中的逻辑控制，和python中的for使用一模一样有没有？{{ }}展示了模板语言中的表达式计算。整段代码简短明了，风格和python很像！
   Jinja2的功能确实很强大，能把一些繁琐的事情变得简单, 我对其中一些功能最为赞赏。
<ul>
   <ol>html代码的escape</ol>
  Jinja2提供两种escape对应html代码的方法:手动escape每一个变量或者自动escape所有变量。当自动escape开启时，除了被显示标记为safe的变量，其它的变量中的html标签都会被escape，此时如果希望某些变量中的html不被escape掉，可以使用|safe 过滤器。例如：
[python]
&lt;td&gt;{{ item|safe }}&lt;/td&gt;
[/python]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date>2015-01-30 12:14:00</wp:post_date>
		<wp:post_date_gmt>2015-01-30 04:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jinja2%e4%bd%bf%e7%94%a8%e5%b0%8f%e8%ae%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Swift中使用realm数据库</title>
		<link>http://www.dcharm.com/?p=262</link>
		<pubDate>Sat, 31 Jan 2015 15:49:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=262</guid>
		<description></description>
		<content:encoded><![CDATA[1. 属性必须使用dynamic修饰符,不能使用let定义常量属性
[python]
    dynamic var id = 0
    dynamic var author: String?
[/python]

PS: Realm数据库有点做的极为不好：用户定义了多个rlm对象，只要其中有一个对象的定义有问题，那么不但是在使用这个对象的时候程序会崩溃，在使用其他对象时，整个程序也会崩溃。

2.清理数据缓存
当模型中的定义改变时，由于数据库中保留了之前版本的模型的定义，再次运行程序时会抛出异常，因此需要在模拟器中删除之前的APP，这样就可以清理掉相应的缓存，再次运行程序就不会报错了。

3. 属性的类型
realm数据库支持objective-c中的数据类型：BOOL, bool, int, NSInteger, long, long long, float, double, CGFloat, NSString, NSDate, and NSData。在swift中定义模型时不能使用NSInteger?，Float?的optional类型,而应当使用NSInteger，Float，因为后者在objective-c中找不到对应的表达方式，而String？则是可以的。

4. 属性的获取方式修饰符
RLMObject对象的属性都必须加上@dynamic修饰符。在objective-c和swift中，有两个和属性的getter和setter方法相关的修饰符：@synthesize，@dynamic。@synthesize的语义是如果没有手动实现setter方法和getter方法，那么编译器会自动为你加上这两个方法。@dynamic告诉编译器,属性的setter与getter方法由用户自己实现，不自动生成。如果@synthesize和@dynamic都没写，那么默认的就是@syntheszie var = _var。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2015-01-31 23:49:09</wp:post_date>
		<wp:post_date_gmt>2015-01-31 15:49:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swift%e4%b8%ad%e4%bd%bf%e7%94%a8realm%e6%95%b0%e6%8d%ae%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Ansj分词</title>
		<link>http://www.dcharm.com/?p=270</link>
		<pubDate>Mon, 02 Feb 2015 03:13:02 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=270</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nlpchina.github.io/ansj_seg/">Ansj</a>是有名的中科院分词工具ICTCLAS的开源Java版本实现，速度和准确性上都可以够得上工业级应用。它提供了4种分词方式：简单分词，精准分词，NLP分词和搜索分词。简单分词不支持用户自定义词典，人名识别，机构名识别和新词发现；精准分词不支持机构名识别和新词发现；NLP分词支持所有的功能，可以识别出未登录词，但是速度比较慢，稳定性差；搜索分词不支持机构名识别和新词发现。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date>2015-02-02 11:13:02</wp:post_date>
		<wp:post_date_gmt>2015-02-02 03:13:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansj%e5%88%86%e8%af%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Spring中文乱码</title>
		<link>http://www.dcharm.com/?p=274</link>
		<pubDate>Sat, 28 Feb 2015 07:56:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[近来在使用Spring构建restful服务时碰到了中文乱码的问题。产生问题的代码如下：
[java]
    @RequestMapping(method = RequestMethod.GET)
    public String index(@RequestHeader(&quot;Accept-Encoding&quot;) String encoding) {
        JSONObject hits =  bookService.search();
        System.out.println(hits);
        return hits.toJSONString();
    }
[/java]
程序在控制台的输出没有乱码，而在浏览器中请求http://localhost:8080/book时网页的显示中的中文是乱码。后台的中文输出没有问题，说明hits的中文编码确实是utf-8，那么问题就出在浏览器对返回结果的编码判断错误。在浏览器的开发者工具中查看响应头部，发现Content-Type:application/json，也就是说响应头部没有指明字符的编码。为了修正这个问题，对上面的代码就行如下修改：
[java]
    @RequestMapping(method = RequestMethod.GET, produces = &quot;application/json;charset=UTF-8&quot;)
    public String index(@RequestHeader(&quot;Accept-Encoding&quot;) String encoding) {
        JSONObject hits =  bookService.search();
        System.out.println(hits);
        return hits.toJSONString();
    }
[/java]
告诉浏览器响应内容的编码为utf-8。修改后，再在浏览器中请求相应的数据，中文乱码问题得到了修正。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2015-02-28 15:56:45</wp:post_date>
		<wp:post_date_gmt>2015-02-28 07:56:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring%e4%b8%ad%e6%96%87%e4%b9%b1%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Spring 4使用中碰到的问题</title>
		<link>http://www.dcharm.com/?p=277</link>
		<pubDate>Mon, 02 Mar 2015 10:02:24 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=277</guid>
		<description></description>
		<content:encoded><![CDATA[Spring使我们构建web或者web服务的过程简单和迅速，在使用过程中，我也碰到了一些问题。

1. Spring将对象序列化为json后返回
下面的代码在使用Spring的3.x版本时是没有任何问题的，但是使用Spring 4会报406的错误，从网上的资料来看是因为Spring 4采用的jackson的版本有问题。
[java]
    @RequestMapping(value = &quot;/isbn/{isbn}&quot;, method = RequestMethod.GET,
            produces = &quot;application/json;charset=UTF-8&quot;)
    private Book getByIsbn(@PathVariable String isbn) {
        if(StringUtils.isBlank(isbn) || (isbn.length() != 10 &amp;&amp; isbn.length() != 13))
        {
            return null;
        }
        Book book = isbn.length() == 10 ? bookService.getByIsbn10(isbn) : bookService.getByIsbn13(isbn);
        if(book == null) {
            book = externalBookService.getByIsbn10(isbn);
            bookService.create(book);
            book = isbn.length() == 10 ? bookService.getByIsbn10(isbn) : bookService.getByIsbn13(isbn);
        }
        return book;
    }
[/java]
将jackson的maven依赖更改为：
[xml]
      &lt;dependency&gt;
          &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
          &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;
          &lt;version&gt;2.2.3&lt;/version&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
          &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
          &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;
          &lt;version&gt;2.2.3&lt;/version&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
          &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
          &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;
          &lt;version&gt;2.2.3&lt;/version&gt;
      &lt;/dependency&gt;
[/xml]
406的错误就解决了。

2. 没有web.xml时maven打包会失败
Spring 4提供两种方式进行配置：基于XML文件和基于Java注解。使用基于XML的方式进行配置时，web项目中会有web.xml配置文件，而基于Java注解时没有web.xml文件，此时用Maven打包会报错：Error assembling WAR: webxml attribute is required。解决的办法是告诉Maven该项目是没有web.xml配置文件的，配置如下：
[xml]
    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
                &lt;configuration&gt;
                    &lt;failOnMissingWebXml&gt;false&lt;/failOnMissingWebXml&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
[/xml]

3. 错误处理
Spring在数据绑定时可能会产生错误，为了看到详细的错误信息需要进行如下配置。
[java]
    @ExceptionHandler(Exception.class)
    public ResponseEntity&lt;String&gt; handleIOException(Exception ex) {
        ResponseEntity&lt;String&gt; responseEntity = new ResponseEntity&lt;String&gt;(ex.toString(), HttpStatus.BAD_REQUEST);
        ex.printStackTrace();
        return responseEntity;
    }
[/java]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date>2015-03-02 18:02:24</wp:post_date>
		<wp:post_date_gmt>2015-03-02 10:02:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring-4%e4%bd%bf%e7%94%a8%e4%b8%ad%e7%a2%b0%e5%88%b0%e7%9a%84%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[maven]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>那些年，阿里云ACE上碰到的坑</title>
		<link>http://www.dcharm.com/?p=279</link>
		<pubDate>Sat, 07 Mar 2015 01:31:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=279</guid>
		<description></description>
		<content:encoded><![CDATA[   使用<a href="http://s.click.taobao.com/t?e=m%3D2%26s%3DwFoo90%2BOAgMcQipKwQzePCperVdZeJviEViQ0P1Vf2kguMN8XjClAqqD8ElqpnDrCngzq6vh1vFGTu7vn9WCcUYf6q4uWe%2FBCFZpj8iwo5kOAOyC%2FYAl5edn1BbglxZYxUhy8exlzcq9AmARIwX9K%2BnbtOD3UdznPV1H2z0iQv9NkKVMHClW0QbMqOpFMIvnvjQXzzpXdTHGJe8N%2FwNpGw%3D%3D">阿里云</a>的产品有段时间了，产品使用简单，稳定性高，售后服务好，尤其是他们的工单服务最为让人称赞。客户提交了工单后客服人员几乎马上就会给出相应的解决方案，如果他们不能解决就会转到相应的技术工程师哪里，实时更新问题的处理进展，节约了我很多时间，让我可以专心在自己的业务上。当然，我在使用他们的产品的过程中也碰到了一些坑，主要是针对ACE产品，让我长了不少知识。
1. Jar包冲突
   在本地打包成功并在ACE容器中测试成功，上传到线上ACE容器时不能成功启动并抛出异常：Cjava.lang.IllegalStateException: Detected both log4j-over-slf4j.jar AND slf4j-log4j12.jar on the class path, preempting StackOverflowError. 
这是因为项目同时包含了对log4j-over-slf4j.jar和slf4j-log4j12.jar两个jar包的依赖，而这两个jar包会循环引用导致内存溢出。解决的办法就是将两个jar包其中一个的依赖移除掉。
   这里的坑在于本地和线上的ACE环境不一致，本地可以正常启动而线上不能正常启动。

2. 访问外部IP
   出于安全考虑，线上ACE环境不能直接访问外部的IP，若果需要访问外部IP需要使用ACE提供的扩展服务中的HTTP代理服务。坑的地方在于ACE的Java帮助文档中的代理设置方法已经过时，使用httpclient 4时的正确的http代理设置方法如下：
[java]
        String host = &quot;proxy.ace.aliyun.com&quot;;
        int port = 3128;
        String username = &quot;xx&quot;;
        String password = &quot;xx&quot;;
        CredentialsProvider credsProvider = new BasicCredentialsProvider();
        credsProvider.setCredentials(new AuthScope(host,port ), new UsernamePasswordCredentials(username, password));
        HttpHost proxy = new HttpHost(host, port, &quot;http&quot;);
        httpClient = HttpClientBuilder.create().setProxy(proxy).setDefaultCredentialsProvider(credsProvider).build();
[/java]
要主要的是"proxy.ace.aliyun.com"是阿里云的内部网址，只能在ACE的线上环境测试，本地是不能测试的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date>2015-03-07 09:31:46</wp:post_date>
		<wp:post_date_gmt>2015-03-07 01:31:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%82%a3%e4%ba%9b%e5%b9%b4%ef%bc%8c%e9%98%bf%e9%87%8c%e4%ba%91ace%e4%b8%8a%e7%a2%b0%e5%88%b0%e7%9a%84%e5%9d%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ace"><![CDATA[ace]]></category>
		<category domain="category" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="%e9%98%bf%e9%87%8c%e4%ba%91"><![CDATA[阿里云]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3690</wp:comment_id>
			<wp:comment_author><![CDATA[西门塔尔牛]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.xmten.com/</wp:comment_author_url>
			<wp:comment_author_IP>123.182.136.76</wp:comment_author_IP>
			<wp:comment_date>2015-04-25 10:10:01</wp:comment_date>
			<wp:comment_date_gmt>2015-04-25 02:10:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>西门塔尔牛</strong>

不错的文章，内容学富五车.禁止此消息：nolinkok@163.com]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1429927802]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1429927802.0102301;s:7:"message";s:80:"Akismet无法复查此条评论（回应：invalid），将尽快自动重试。";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:51:{s:15:"comment_post_ID";i:279;s:14:"comment_author";s:15:"西门塔尔牛";s:20:"comment_author_email";s:0:"";s:18:"comment_author_url";s:21:"http://www.xmten.com/";s:15:"comment_content";s:105:"<strong>西门塔尔牛</strong>

不错的文章，内容学富五车.禁止此消息：nolinkok@163.com";s:12:"comment_type";s:9:"trackback";s:7:"user_ip";s:14:"123.182.136.76";s:10:"user_agent";s:132:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 1.0.3705)";s:8:"referrer";s:28:"http://www.dcharm.com/?p=279";s:4:"blog";s:21:"http://www.dcharm.com";s:9:"blog_lang";s:5:"zh_CN";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:28:"http://www.dcharm.com/?p=279";s:21:"akismet_comment_nonce";s:6:"failed";s:10:"POST_title";s:15:"西门塔尔牛";s:8:"POST_url";s:21:"http://www.xmten.com/";s:12:"POST_excerpt";s:71:"不错的文章，内容学富五车.禁止此消息：nolinkok@163.com";s:14:"POST_blog_name";s:15:"西门塔尔牛";s:15:"SERVER_SOFTWARE";s:11:"nginx/1.4.1";s:11:"REQUEST_URI";s:23:"/wp-trackback.php?p=279";s:4:"USER";s:8:"www-data";s:4:"HOME";s:8:"/var/www";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:12:"QUERY_STRING";s:5:"p=279";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"331";s:15:"SCRIPT_FILENAME";s:45:"/usr/share/nginx/html/dcharm/wp-trackback.php";s:11:"SCRIPT_NAME";s:17:"/wp-trackback.php";s:12:"DOCUMENT_URI";s:17:"/wp-trackback.php";s:13:"DOCUMENT_ROOT";s:28:"/usr/share/nginx/html/dcharm";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"REMOTE_ADDR";s:14:"123.182.136.76";s:11:"REMOTE_PORT";s:5:"63193";s:11:"SERVER_ADDR";s:13:"115.29.175.99";s:11:"SERVER_PORT";s:2:"80";s:11:"SERVER_NAME";s:14:"www.dcharm.com";s:5:"HTTPS";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"HTTP_ACCEPT";s:87:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*";s:12:"HTTP_REFERER";s:28:"http://www.dcharm.com/?p=279";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:132:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 1.0.3705)";s:9:"HTTP_HOST";s:14:"www.dcharm.com";s:19:"HTTP_CONTENT_LENGTH";s:3:"331";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:5:"Close";s:8:"PHP_SELF";s:17:"/wp-trackback.php";s:12:"REQUEST_TIME";s:10:"1429927801";s:25:"comment_post_modified_gmt";s:19:"2015-04-24 08:05:42";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1430791575.4997289;s:7:"message";s:31:"admin修改评论状态为trash";s:5:"event";s:12:"status-trash";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430791575]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>买房小记</title>
		<link>http://www.dcharm.com/?p=290</link>
		<pubDate>Thu, 23 Apr 2015 01:58:41 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=290</guid>
		<description></description>
		<content:encoded><![CDATA[    看房看了2年，最近终于下手了。签合同之前其实还是有所顾虑的，不知道该不该现在买，不知道花这么多钱在这个地方买的是否划算……买过之后担心了好久，现在内心终于平复了，也能比较客观地看待整个过程，今天写下这些心得，希望能给正在看房和将要看房的童鞋们一些参考。
   买房的时机。对于刚需房，只要没有被限购且有首付者都会考虑买。看了2年房，2013年我们眼睁睁地看着上海的各地区（包括中心或如唐镇等区域发展地区）的房价基本涨了1万/mm2，而2014年房价在全国各地区均有所降低，但是总体成交量就会相应增高（数据来源于《财经郎眼》20150330）。但是根据我们去年看房的感受来讲，2014年房价基本没有涨，成交量也不高。但是在2014年11月上海调整普通住宅标准后，我们看过的地段好的小区房东相应的提高了10-30万。2014年房地产确实不景气，但是2015年3月开始进行不动产登记，其实大家都期待通过这个手段降低房价但是刚需是很庞大的，根据调查如果放开限购有1/3的人会买二套房或三套房，而租客中有1/2会买房，这就不可能通过一些家庭多余的房子来满足刚需这么庞大的群体。而且2015年上海政府工作报告中由以前的“压制”“调节”等变为“促进房地产市场平稳健康发展”。所以从政府调节及目前市场需要来看，我们估计在这一年里房价应该不会跌的。因此我们选择了立即看房，买房。
买房总是会很纠结的，总是想在自己的预算中买一个地段好、上班近、房龄新的学区房。因为对于我们，买房有两个目的：宜居和保值。人家说买房，房子永远是贬值的，因为它越来越旧，而只有地段是升值的。其实我们的预算是350万，我上班在西藏南路中山南一路附近，要想在浦西买就只能买旧房子了，但是浦西确实学校多，上学方便。我们仔细看了一下上海市的规划方案，前滩和后滩是重点发展区域，所以我们决定买在江对面（2个公交车站），上班也算方便，周围配套也不错，主要是更有升值空间。将来需要换学区房的话，应该也不会亏的。
选定了区域之后，我们就开始实地看房，把周围的小区基本上都看过：贵的、便宜的，心里基本有了谱：一分钱一分货，大概清楚我们的预算能买什么样的房子。小区环境不好的小区就不再看了，锁定几个小区深度看，包括看周围的交通、超市、学校、医院及有没有工厂、污染等。而且每个小区中的房子也是有很大差别的：楼层，装修情况，前面有无高楼阻挡，有没有靠马路，靠不靠近垃圾场等，所以房价也会差10万-30万，其实能不能碰到理想的房子也是要看运气的，因为一个优质小区中的好房子一般出来的并不多，有时候需要等，就像我们看的那个小区，在中央楼王位置的房子（当然也是我们最满意的）也就看到过2套。
如果看中了一套房子，中介总会催促赶紧定下来，因为他们会利用看房者的疲劳心态和购买冲动。这时候就需要和中介斗智斗勇了，其实中介在意的是自己的成交量，所以他们需要的是好的房源和诚意购买的客户，在有好的房源情况下他们中介公司之间就要竞争时间了，所以他会把好的房子首先推荐给他觉得最可能要买的人。所以要让他知道你是最近就要买的，这样他也会把手里好的房源第一时间给你。
订房子之前首先要复看房子有没有质量问题，是不是满2年的唯一住房，产证上有谁，他们之间有没有纠纷，产证有没有抵押等；再看房东人，可以大概了解一下家庭情况，有没有户口在这里，有没有死亡等。当然还可以去房产中心去拉产调，看看房子的信息是否属实。确定要买了，就要跟房东讲价了，其实我觉得这时候让中介谈是比较好的，但是中介会倾向房东的，因为房东肯定会把房买给出价高的人，所以中介之间竞争的也是价格，看谁能谈到高的价格。中介如果没有把握住一套好的房子就失去了，而买主可能还是会再找他继续看房。中介谈价钱的手段很多，会告诉你谁出了多少多少，给你压力；或者让你去看别的房子（等价位肯定没有你想买的那个好）。这个时候就要保持理智，这套房你觉得你愿意出多少钱买，你就减去你底价的5万10万给中介报，让中介谈，中介肯定是谈不下来的，让双方再见面谈，见面谈可以再给加五万或10万，让房东觉得你很有诚意，再继续谈就不要加价了，总之谈价要保持冷静又要讲究策略，要让钱花得值。
当然谈完房价后就是中介费了，中介费一般是2%（因为还有房东的1%）,有些中介是很狡猾的，让你签了合同再谈中介费，这就很被动了。中介费我个人觉得1%-1.5%就很高了，总之这个能谈多低谈多低，因为他们暴利嘛。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2015-04-23 09:58:41</wp:post_date>
		<wp:post_date_gmt>2015-04-23 01:58:41</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%b9%b0%e6%88%bf%e5%b0%8f%e8%ae%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="%e4%b9%b0%e6%88%bf"><![CDATA[买房]]></category>
		<category domain="category" nicename="%e6%8a%95%e8%b5%84"><![CDATA[投资]]></category>
		<category domain="post_tag" nicename="%e6%8a%95%e8%b5%84"><![CDATA[投资]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>WordPress服务器CPU使用率100%故障排除</title>
		<link>http://www.dcharm.com/?p=294</link>
		<pubDate>Fri, 24 Apr 2015 07:13:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=294</guid>
		<description></description>
		<content:encoded><![CDATA[近段时间我的wordpress博客主页响应时间由原来不到1S增加到3S-5s，这么长的响应时间会让浏览者失去耐心进而离开博客，因此我专门抽出了一下午的时间来解决这个问题。
首先使用ssh远程登录到我的主机并使用top命令查看这个机器的CPU和内存使用情况：
[shell]
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
 3919 www-data  20   0 63708 2812 1280 S  21.3  0.1   0:38.08 php5-fpm
 3791 www-data  20   0 63708 2812 1280 S  21.2  0.1   0:38.08 php5-fpm
 3981 www-data  20   0 63708 2812 1280 S  20.3  0.1   0:38.08 php5-fpm
 2189 www-data  20   0 63708 2812 1280 S  19.4  0.1   0:38.08 php5-fpm
 4289 www-data  20   0 63708 2812 1280 S  22.8  0.1   0:38.08 php5-fpm
.....
[/shell]
我发现有5个php5-fpm（PHP的CGI进程），每个进程差不多使用20%的CPU，总共快占用了CPU的100%。CPU的负载解决100%时，它的响应就会相当缓慢，从而拖慢整个网站的访问速度。
好的，问题找到了就成功了一大半，接下来我们来分析CPU负载过高的原因。一开始我以为是php5-fpm的进程太多，每个PHP进程都占用了20%的CPU，那么减少PHP进程的数目不就可以将CPU的负载降下来了么？带着这个问题我修改了php5-fpm的配置文件"www.conf"
[shell]
pm.max_children = 3
[/shell]
将PHP的进程数目调整为3，然后重启PHP服务。再次使用TOP命令查看CPU负载：
[shell]
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
 3919 www-data  20   0 63708 2812 1280 S  31.3  0.1   0:38.08 php5-fpm
 3791 www-data  20   0 63708 2812 1280 S  31.2  0.1   0:38.08 php5-fpm
 3981 www-data  20   0 63708 2812 1280 S  30.3  0.1   0:38.08 php5-fpm
.....
[/shell]
我发现虽然PHP进程数目虽然确实是由5个减少为3个，但是每个PHP进程使用的CPU由20%上升到30%左右，CPU的负载仍然过高。此时我很好奇到底是什么请求导致了我的PHP进程这么繁忙，打开Nginx的access.log后发现每一秒中有一百条左右下面的请求在访问我的博客：
[shell]
10.158.16.8 - - [24/Apr/2015:15:19:08 +0800] &quot;HEAD / HTTP/1.0&quot; 200 0 &quot;-&quot; &quot;-&quot;
[/shell]
访问量太大导致我的服务器疲于应付，从而CPU负载一直很高。仔细查看后我发现这是我之前设置的对网站健康检查的请求，当时没有考虑周全，直接请求了我的网站主页，正确的做法是请求网站的某个静态资源。重新设置健康检查的请求后，access.log中的请求变为了：
[shell]
10.158.16.8 - - [24/Apr/2015:15:19:08 +0800] &quot;HEAD /pic/2014/07/bar.png HTTP/1.0&quot; 200 0 &quot;-&quot; &quot;-&quot;
[/shell]
CPU的负载也回到了10%左右的正常水平，网站的响应速度也回到了1S以内。

PS：如果有同学发现服务器莫名在统一时间收到很多可疑的请求从而导致服务器负载过高，可以通过Linux中自带的iptables工具将这部分流量过滤掉，从而保证网站的正常服务。附上<a href="https://lesca.me/archives/iptables-tutorial-structures-configuratios-examples.html" title="iptables教程" target="_blank">iptables教程</a>。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2015-04-24 15:13:17</wp:post_date>
		<wp:post_date_gmt>2015-04-24 07:13:17</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>wordpress%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%95%85%e9%9a%9c%e8%ae%b0%e5%bd%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="word"><![CDATA[word]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Spring 4中的数据绑定</title>
		<link>http://www.dcharm.com/?p=311</link>
		<pubDate>Tue, 05 May 2015 02:24:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=311</guid>
		<description></description>
		<content:encoded><![CDATA[    在Java没有Spring这一类的web框架之前，web开发人员需要手动将HTTP请求中的数据反序列化为Java对象，然后调用对应的方法以获取结果，这个结果也是Java对象，因此在返回给客户端之前web开发人员要将结果序列化到HTTP响应中。Java对象序列化和反序列化的过程很繁琐且和业务无关，Spring之类的web框架为开发人员自动话了这些过程，使得开发者可以更加专注于业务开发。
    Spring对HTTP的GET请求和POST请求中数据的绑定方式是各不相同的。
<strong>1. HTTP GET请求数据绑定</strong>
HTTP GET请求的数据放在URL中，通过<strong>@PathVariable</strong>注解来实现，默认支持int, long, Date等Java中的基本数据类型，如果要支持自定义的数据类型，需要配置WebDataBinder。
<strong>1.1 默认GET数据绑定</strong>
下面的代码通过<strong>@PathVariable</strong>注解实现了将URL中的参数转换为getById方法中的ID参数：
[java]
    @RequestMapping(value = &quot;/{id}&quot;, method = RequestMethod.GET)
    public BookInvitation getById( @PathVariable int id) {
        BookInvitation i = bookInvitationService.getById(id);
        return i;
    }
[/java]
<strong>1.2 自定义GET数据绑定</strong>
Spring中默认支持的日期数据的格式是"yyyy-MM-dd"，假设现在需要支持"yyyy-MM-dd HH:mm:ss"格式的日期数据，我们就需要配置WebDataBinder以增加自定义数据绑定方式。
[java]
    @InitBinder
    public void initBinder(WebDataBinder binder) {
        SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
        binder.registerCustomEditor(Timestamp.class, new CustomDateEditor(dateFormat, false));
    }
[/java]
其中@InitBinder注解和WebDataBinder参数是必须的，方法的名字可以随意改变。

<strong>2. HTTP POST请求数据绑定</strong>
不同于GET请求一般将数据放在URL中，POST请求将数据放在HTTP的body中，通过<strong>@RequestBody</strong>注解来实现。当我们要传递的对象由多个简单字段构成时，POST请求比GET请求更加适合。Spring默认支持int, long, Date等Java中的基本数据类型，如果要支持自定义的数据类型，需要配置MessageConverter。
<strong>2.1 默认POST数据绑定</strong>
Spring 4中的方法参数注解<strong>@RequestBody</strong>指定被注解的方法参数被绑定到HTTP请求的body部分。 例如：
[java]
  @RequestMapping(value = &quot;/create&quot;, method = RequestMethod.POST)
    public String create(@RequestBody BookInvitation invitation) {
        boolean r = bookInvitationService.createBookInvitation(invitation);
        String s = r ? String.format(&quot;invitation is created.&quot;) : String.format(&quot;failed to send invitation.&quot;);
        return s;
    }
[/java]
@RequestBody标记的是参数invitation，表明Spring会自动从HTTP请求的body中获取invitation的数据并将其反序列化为BookInvitation对象，而后调用create方法。

<strong>2.2 自定义POST数据绑定</strong>
BookInvitation类的定义如下：
[java]
public class BookInvitation {
    private String meetPlace;
    private double meetLat;
    private double meetLng;
    private Timestamp meetTime;
}
[/java]
使用HTTP的POST请求:
[shell]
curl -X POST -H &quot;Content-Type: application/json&quot; -d '{&quot;meetPlace&quot;:&quot;xietulu&quot;, &quot;meetLat&quot;:10.2, &quot;meetLng&quot;:122.2, &quot;meetTime&quot;:&quot;2015-10-12 11:11:11&quot;}' http://localhost/create
[/shell]
调用1中定义的create方法时会抛出异常：
[shell]
com.fasterxml.jackson.databind.exc.InvalidFormatException: Can not construct instance of java.sql.Timestamp from String value '2015-10-12 11:11:11': not a valid representation 
[/shell]
这是因为BookInvitation中的meetTime属性是Timestamp类型，而“2015-10-12 11:11:11”的格式不符合Spring支持的timestamp默认格式，所以在反序列化时抛出了异常。Spring使用HttpMessageConverter对HTTP的body中的数据进行序列化和反序列化，因此我们需要配置Spring支持这种日期的格式：
[java]
 @Override
    public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) {
        Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder();
        SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
        builder.indentOutput(true).dateFormat(dateFormat);
        converters.add(new MappingJackson2HttpMessageConverter(builder.build()));
    }
[/java]
这样Spring就能识别"yyyy-MM-dd HH:mm:ss"格式的日期数据了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date>2015-05-05 10:24:19</wp:post_date>
		<wp:post_date_gmt>2015-05-05 02:24:19</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>spring-4%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae%e7%bb%91%e5%ae%9a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Python安装Matplotlib等科学计算包</title>
		<link>http://www.dcharm.com/?p=329</link>
		<pubDate>Wed, 13 May 2015 08:44:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://www.dcharm.com/?p=329</guid>
		<description></description>
		<content:encoded><![CDATA[随着Pandas,ScikitLearn，Matplotlib等机器学习和统计作图的包在Python中的出现，加上Python本身的简单和通用，越来越多的人开始使用Python作为数据分析的编程语言。Python众多开源的数据分析包极大的方便了数据分析工作，但是各个包之间复杂的依赖和版本不一致问题，安装这些包的过程相当容易出错，解决这些错误是个相当耗时和令人沮丧的过程。我也这样痛苦过，知道我发现了<a href="https://store.continuum.io/cshop/anaconda/" title="anaconda" target="_blank">anaconda</a>,借助它我们能方便的搭建Python数据分析环境。
下面我以Mac为例，讲解Anaconda安装Matplotlib等包的方法。
<strong>1.安装Anaconda</strong>
从主页<a href="https://store.continuum.io/cshop/anaconda/" title="anaconda" target="_blank">anaconda</a>上下载它的安装包。这是一个国外的网站，大家觉得网速慢的话，可以从百度网盘里面下载<a href="http://pan.baidu.com/s/1dDdFu3R" title="anacoda" target="_blank">安装文件</a>。这是一个dmg的安装包，双击它，按照提示一步一步地操作后就能成功安装。

<strong>2.验证安装是否成功</strong>
在命令行中输入命令
[shell]
conda
[/shell]
会得到关于conda命令的帮助:
[shell]
usage: conda [-h] [-V] command ...

conda is a tool for managing and deploying applications, environments and
packages.

positional arguments:
  command
    info         Display information about current conda install.
    help         Displays a list of available conda commands and their help
                 strings.
    list         List linked packages in a conda environment.
    search       Search for packages and display their information. The input
                 is a regular expression. To perform a search with a search
                 string that starts with a -, separate the search from the
                 options with --, like 'conda search -- -h'.
    create       Create a new conda environment from a list of specified
                 packages.
    install      Install a list of packages into a specified conda
                 environment.
....
[/shell]

<strong>3.创建虚拟环境</strong>
使用下面的命令创建一个名字为test的科学计算环境
[shell]
conda create -n test anaconda
[/shell]
一个电脑上可以创建多个科学计算环境，每个环境之间互不影响。

<strong>4.进入虚拟环境</strong>
使用下面的命令进入上面创建的环境:
[shell]
source activate test
[/shell]
然后使用ipython进行数据分析:
[shell]
ipython
[/shell]
如果想使用ipython的图形界面，使用如下的命令:
[shell]
ipython qtconsole
[/shell]

<strong>5.数据分析</strong>
好了，到这一步所有的准备工作都完成了，我们可以做什么呢？anaconda为我们预装了Pandas和Matplot，我们可以参照我<a href="http://www.dcharm.com/?p=15" target="_blank">之前的文章</a>画几个漂亮的统计图形:
[python]
import pylab
import numpy as np
import matplotlib.pyplot as plt
 
N = 5
ind = np.arange(N)
width = 0.35
menMeans = (20, 35, 30, 35, 27)
menStd = (2, 3, 4, 1, 2)
 
womenMeans = (25, 32, 34, 20, 25)
womenStd = (3, 5, 2, 3, 3)
 
plt.bar(ind, menMeans, width, color='r', yerr=menStd)
plt.bar(ind+width, womenMeans, width, color='y', yerr=womenStd)
plt.title('Men-Women')
[/python]
得到漂亮的条形图
<a href="http://www.dcharm.com/wp-content/uploads/2014/07/bar.png"><img src="http://www.dcharm.com/wp-content/uploads/2014/07/bar.png" alt="bar" width="800" height="600" class="alignnone size-full wp-image-19" /></a>

也可以参考我<a href="http://www.dcharm.com/?p=241" target="_blank">之前的文章</a>进行机器学习，训练一些厉害的模型!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>329</wp:post_id>
		<wp:post_date>2015-05-13 16:44:45</wp:post_date>
		<wp:post_date_gmt>2015-05-13 08:44:45</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>python%e5%ae%89%e8%a3%85matplotlib%e7%ad%89%e7%a7%91%e5%ad%a6%e8%ae%a1%e7%ae%97%e5%8c%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<category domain="post_tag" nicename="%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90"><![CDATA[数据分析]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_encloseme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
